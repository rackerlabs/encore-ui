angular.module('demoApp')
.value('Examples', {
    "accountInfo.deliquent": {
        "markup": "<rx-account-info account-info-banner=\"true\" account-number=\"5623\"></rx-account-info>\n"
    },
    "accountInfo.deprecated": {
        "markup": "<rx-account-info account-number=\"12345\"></rx-account-info>\n"
    },
    "accountInfo.errorBadges": {
        "markup": "<rx-notifications stack=\"badgeError\"></rx-notifications>\n<rx-account-info\n  account-info-banner=\"true\"\n  account-number=\"6789\"\n  notify-stack=\"badgeError\">\n</rx-account-info>\n"
    },
    "accountInfo.errorTeamBadges": {
        "markup": "<rx-notifications stack=\"teamBadgeError\"></rx-notifications>\n<rx-account-info\n  account-info-banner=\"true\"\n  account-number=\"12345\"\n  team-id=\"9876\"\n  notify-stack=\"teamBadgeError\">\n</rx-account-info>\n"
    },
    "accountInfo.rxPage": {
        "markup": "<rx-app\n  collapsible-nav=\"true\"\n  collapsed-nav=\"true\"\n  site-title=\"My App\"\n  id=\"custom-rxApp\"\n  menu=\"{}\"\n  new-instance=\"true\">\n\n  <rx-page\n    title=\"'Account Info Demo'\"\n    status=\"alpha\"\n    account-number=\"12345\"\n    team-id=\"123\">\n  </rx-page>\n\n</rx-app>\n"
    },
    "accountInfo.simple": {
        "markup": "<rx-account-info account-info-banner=\"true\" account-number=\"12345\"></rx-account-info>\n"
    },
    "accountInfo.unknownAccount": {
        "markup": "<rx-notifications stack=\"nameError\"></rx-notifications>\n<rx-account-info\n  account-info-banner=\"true\"\n  account-number=\"9876\"\n  notify-stack=\"nameError\">\n</rx-account-info>\n"
    },
    "accountInfo.withTeamBadges": {
        "markup": "<rx-account-info\n  account-info-banner=\"true\"\n  account-number=\"3265\"\n  team-id=\"123\">\n</rx-account-info>\n"
    },
    "ActionMenu.simple": {
        "markup": "<table class=\"table-striped\" ng-controller=\"actionMenuSimpleCtrl\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th class=\"actions\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Globally dismissible</td>\n      <td>\n        <rx-action-menu id=\"globalDismissal\">\n          <ul class=\"actions-area\">\n            <li>\n              <rx-modal-action\n                template-url=\"addActionTemplate.html\"\n                classes=\"msg-action\">\n                <i class=\"fa fa-plus fa-lg\"></i> Add\n              </rx-modal-action>\n            </li>\n            <li>\n              <rx-modal-action\n                template-url=\"deleteActionTemplate.html\"\n                classes=\"msg-warn\">\n                <i class=\"fa fa-times fa-lg\"></i> Delete\n              </rx-modal-action>\n            </li>\n          </ul>\n        </rx-action-menu>\n      </td>\n    </tr>\n    <tr>\n      <td>Only dismissible by clicking on cog</td>\n      <td>\n        <rx-action-menu global-dismiss=\"false\">\n          <ul class=\"actions-area\">\n            <li>\n              <rx-modal-action\n                template-url=\"addActionTemplate.html\"\n                classes=\"msg-action\">\n                <i class=\"fa fa-plus fa-lg\"></i> Add\n              </rx-modal-action>\n            </li>\n            <li>\n              <rx-modal-action\n                template-url=\"deleteActionTemplate.html\"\n                classes=\"msg-warn\">\n                <i class=\"fa fa-times fa-lg\"></i> Delete\n              </rx-modal-action>\n            </li>\n          </ul>\n        </rx-action-menu>\n      </td>\n    </tr>\n    <td>Unorthodox Behaviors (no modals, hidden item)</td>\n    <td>\n      <rx-action-menu id=\"custom\">\n        <ul class=\"actions-area\">\n          <li>\n            <button class=\"btn-link trigger\" ng-click=\"add()\">\n              <span class=\"msg-action\"><i class=\"fa fa-plus fa-lg\"></i> Add</span>\n            </button>\n          </li>\n          <li>\n            <button class=\"btn-link trigger\" ng-click=\"remove()\">\n              <span class=\"msg-warn\"><i class=\"fa fa-times fa-lg\"></i> Delete</span>\n            </button>\n          </li>\n          <li ng-show=\"false\">\n            <button class=\"btn-link trigger\">\n              <span class=\"msg-warn\"><i class=\"fa fa-times fa-lg\"></i> Visually Hidden</span>\n            </button>\n          </li>\n        </ul>\n      </rx-action-menu>\n    </td>\n  </tbody>\n</table>\n\n<script type=\"text/ng-template\" id=\"deleteActionTemplate.html\">\n    <rx-modal-form title=\"Delete Action\" submit-text=\"Delete\">\n        <span>Do you want to delete something?</span>\n    </rx-modal-form>\n</script>\n<script type=\"text/ng-template\" id=\"addActionTemplate.html\">\n    <rx-modal-form title=\"Add Action\" submit-text=\"Add\">\n        <span>Do you want to add something?</span>\n    </rx-modal-form>\n</script>\n",
        "javascript": "angular.module('demoApp')\n.controller('actionMenuSimpleCtrl', function ($scope, rxNotify) {\n    $scope.add = function () {\n        rxNotify.add('Added!', {\n            type: 'success',\n            repeat: false,\n            timeout: 3\n        });\n    };\n\n    $scope.remove = function () {\n        rxNotify.add('Deleted!', {\n            type: 'error',\n            repeat: false,\n            timeout: 3\n        });\n    };\n});\n"
    },
    "Breadcrumbs.simple": {
        "markup": "<div ng-controller=\"breadcrumbsSimpleCtrl\">\n  <nav class=\"page-header clearfix\">\n    <rx-breadcrumbs></rx-breadcrumbs>\n  </nav>\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('breadcrumbsSimpleCtrl', function ($scope, rxBreadcrumbsSvc) {\n    rxBreadcrumbsSvc.set([{\n        path: '#/elements',\n        name: 'Elements',\n    }, {\n        name: '<strong>All Elements</strong>',\n        status: 'demo'\n    }]);\n});\n"
    },
    "button.animated": {
        "markup": "<div ng-controller=\"buttonAnimatedExampleCtrl\">\n  <rx-button\n     default-msg=\"Click here to see ellipses\"\n     toggle=\"status.loading\"\n     toggle-msg=\"Loading Ellipses\"\n     ng-click=\"clickMe()\"\n     ng-disabled=\"status.disable\">\n  </rx-button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('buttonAnimatedExampleCtrl', function ($scope, $timeout) {\n    $scope.status = {\n        loading: false,\n        disable: false\n    };\n\n    $scope.clickMe = function () {\n        $scope.status.loading = true;\n        $timeout(function () {\n            $scope.status.loading = false;\n        }, 4000);\n    };\n});\n"
    },
    "button.colors.cancel": {
        "markup": "<button class=\"button cancel\">\n  Cancel Button\n</button>\n\n"
    },
    "button.colors.disabled": {
        "markup": "<button class=\"button\" disabled>\n  Disabled Button\n</button>\n"
    },
    "button.colors.finish": {
        "markup": "<button class=\"button finish\">\n  Finish &amp; Close Button\n</button>\n"
    },
    "button.colors.negative": {
        "markup": "<button class=\"button negative\">\n  Negative Button\n</button>\n"
    },
    "button.colors.progression": {
        "markup": "<button class=\"button\">\n  Progression Button\n</button>\n\n"
    },
    "button.colors.submit": {
        "markup": "<button class=\"button submit\">\n  Submit Button\n</button>\n\n"
    },
    "button.disable": {
        "markup": "<div ng-controller=\"buttonDisableCtrl\">\n  <!-- Plain Button -->\n  <button\n    class=\"button\"\n    rx-toggle=\"status.disable\">\n\n    Toggle enabled/disabled of 'Login'\n  </button>\n\n  <!-- rxButton -->\n  <rx-button\n    classes=\"positive\"\n    toggle-msg=\"Authenticating\"\n    default-msg=\"Login\"\n    toggle=\"status.loading\"\n    ng-disabled=\"status.disable\"\n    ng-click=\"login()\">\n  </rx-button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('buttonDisableCtrl', function ($scope, $timeout) {\n    $scope.status = {\n        loading: false,\n        disable: true\n    };\n\n    $scope.login = function () {\n        $scope.status.loading = true;\n\n        $timeout(function () {\n            $scope.status.loading = false;\n        }, 4000);\n    };//login()\n});\n"
    },
    "button.group": {
        "markup": "<div ng-controller=\"buttonGroupExampleCtrl\">\n  <div class=\"button-group demo-button-width\">\n    <input id=\"status-off\" type=\"radio\" ng-model=\"status\" value=\"off\">\n    <label for=\"status-off\"> Off </label>\n    <input id=\"status-manual\" type=\"radio\" ng-model=\"status\" value=\"manual\">\n    <label for=\"status-manual\"> Manual </label>\n    <input id=\"status-auto\" type=\"radio\" ng-model=\"status\" value=\"status\">\n    <label for=\"status-auto\"> Auto </label>\n  </div>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('buttonGroupExampleCtrl', function ($scope) {\n    $scope.status = 'off';\n});\n",
        "less": ".button-group.demo-button-width {\n  width: 250px;\n}\n"
    },
    "button.simple": {
        "markup": "<div ng-controller=\"buttonSimpleCtrl\">\n  <rx-button\n    id=\"demo-ui-rx-button\"\n    toggle-msg=\"Authenticating\"\n    default-msg=\"Login\"\n    toggle=\"isLoading\"\n    ng-click=\"login()\">\n  </rx-button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('buttonSimpleCtrl', function ($scope, $timeout) {\n    $scope.isLoading = false;\n\n    $scope.login = function () {\n        $scope.isLoading = true;\n\n        $timeout(function () {\n            $scope.isLoading = false;\n        }, 4000);\n    };//login()\n});\n"
    },
    "button.sizing": {
        "markup": "<button class=\"button xl\">Extra-large Button</button>\n\n<button class=\"button lg\">Large Button</button>\n\n<button class=\"button\">Default Button</button>\n\n<button class=\"button sm\">Small Button</button>\n"
    },
    "collapse.box": {
        "markup": "<rx-collapse class=\"demo-with-title\" title=\"A Custom Title\" expanded=\"true\">\n  You can put whatever content you want to inside here\n</rx-collapse>\n"
    },
    "collapse.moreless": {
        "markup": "<rx-metadata>\n  <section>\n    <rx-meta label=\"Name\"> Lorem ipsum dolor sit amet </rx-meta>\n    <rx-meta label=\"ID\"> 1aa2bfa9-de8d-42f7-9f6d-e6437855b36e </rx-meta>\n    <rx-meta label=\"Region\"> ORD </rx-meta>\n    <rx-meta label=\"Created\"> December 2, 2014 @ 14:28 </rx-meta>\n    <rx-collapse class=\"demo-no-title\" expanded=\"false\">\n      <rx-meta label=\"Name\"> Lorem ipsum dolor sit amet </rx-meta>\n      <rx-meta label=\"ID\"> 1aa2bfa9-de8d-42f7-9f6d-e6437855b36e </rx-meta>\n      <rx-meta label=\"Region\"> ORD </rx-meta>\n      <rx-meta label=\"Created\"> December 2, 2014 @ 14:28 </rx-meta>\n    </rx-collapse>\n  </section>\n</rx-metadata>\n"
    },
    "copy.advanced": {
        "markup": "<div ng-controller=\"copyAdvancedCtrl\" layout>\n  <div flex>\n    <h4>Plain Text</h4>\n\n    <h5>Compact</h5>\n    <p>\n      <rx-copy compact id=\"copy-long-compact\">\n        A compacted paragraph that will wrap across multiple lines.\n        {{loremIpsum}}\n      </rx-copy>\n    </p>\n\n    <h5>Compact and Bordered</h5>\n    <p>\n      <rx-copy compact class=\"bordered\" id=\"copy-long-compact-bordered\">\n        A compacted, bordered paragraph that will wrap across multiple lines.\n        {{loremIpsum}}\n      </rx-copy>\n    </p>\n  </div>\n  <div flex>\n    <h4>Within Metadata</h4>\n    <rx-metadata>\n      <section>\n        <rx-meta label=\"Long Text (compact)\">\n          <rx-copy compact id=\"copy-metadata-compact\">\n            A compacted metadata value that will wrap across multiple lines.\n            {{loremIpsum}}\n          </rx-copy>\n        </rx-meta>\n\n        <rx-meta label=\"Long Text (compact and bordered)\">\n          <rx-copy compact class=\"bordered\" id=\"copy-metadata-compact-bordered\">\n            A compacted, bordered metadata value to wrap across multiple lines.\n            {{loremIpsum}}\n          </rx-copy>\n        </rx-meta>\n      </section>\n    </rx-metadata>\n  </div>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('copyAdvancedCtrl', function ($scope) {\n    $scope.loremIpsum = [\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sit',\n        'amet elit ut metus semper tempor ac vitae nunc. Fusce cursus odio',\n        'eget maximus vulputate. Nullam hendrerit enim vitae augue vulputate,',\n        'eu consequat tellus imperdiet. Duis magna dolor, scelerisque non',\n        'magna ac, bibendum interdum turpis. Phasellus placerat placerat',\n        'nunc, in sodales neque. Proin at urna quis tellus congue feugiat.',\n        'Praesent dictum porttitor tristique. In tincidunt dignissim ultricies.',\n        'Maecenas in turpis a odio dictum molestie.'\n    ].join(' ');\n});\n"
    },
    "copy.simple": {
        "markup": "<div ng-controller=\"copySimpleCtrl\" layout layout-margin>\n  <div flex>\n    <h4>Plain Text</h4>\n\n    <h5>Short Paragraph</h5>\n    <p>\n      <rx-copy id=\"copy-simple-short\">This is a short sentence.</rx-copy>\n    </p>\n\n    <h5>Long Paragraph</h5>\n    <p>\n      <rx-copy id=\"copy-simple-long\">\n        A paragraph that will wrap across multiple lines. {{loremIpsum}}\n      </rx-copy>\n    </p>\n  </div>\n\n  <div flex>\n    <h5>Within Metadata</h5>\n    <rx-metadata>\n      <section>\n        <rx-meta label=\"Short Text\">\n          <rx-copy>This is a short metadata description.</rx-copy>\n        </rx-meta>\n        <rx-meta label=\"Long Text\">\n          <rx-copy>\n            A paragraph that will wrap across multiple lines. {{loremIpsum}}\n          </rx-copy>\n        </rx-meta>\n      </section>\n    </rx-metadata>\n  </div>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('copySimpleCtrl', function ($scope) {\n    $scope.shortValue = 'This is a short sentence.';\n\n    $scope.loremIpsum = [\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sit',\n        'amet elit ut metus semper tempor ac vitae nunc. Fusce cursus odio',\n        'eget maximus vulputate. Nullam hendrerit enim vitae augue vulputate,',\n        'eu consequat tellus imperdiet. Duis magna dolor, scelerisque non',\n        'magna ac, bibendum interdum turpis. Phasellus placerat placerat',\n        'nunc, in sodales neque. Proin at urna quis tellus congue feugiat.',\n        'Praesent dictum porttitor tristique. In tincidunt dignissim ultricies.',\n        'Maecenas in turpis a odio dictum molestie.'\n    ].join(' ');\n});\n"
    },
    "copy.tables": {
        "markup": "<table ng-controller=\"copyTableCtrl\" class=\"table-striped rxCopyTable\">\n  <colgroup>\n    <col width=\"100\" />\n    <col width=\"200\" />\n    <col />\n  </colgroup>\n  <thead>\n    <tr>\n      <th>Short Value</th>\n      <th>Medium Value</th>\n      <th>Long Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"copy-short\">\n        <rx-copy>Short</rx-copy>\n        <rx-copy class=\"subdued\">Secondary Copy Value 1 -- too long for cell</rx-copy>\n      </td>\n      <td class=\"copy-medium\">\n        <rx-copy>A medium-length value.</rx-copy>\n        <rx-copy class=\"subdued\">Secondary Copy Value 2</rx-copy>\n      </td>\n      <td class=\"copy-long\">\n        <rx-copy>\n          An extremely long cell value that won't fit in the width of the cell.\n          {{loremIpsum}}\n        </rx-copy>\n        <rx-copy class=\"subdued\">Secondary Copy Value 3</rx-copy>\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
        "javascript": "angular.module('demoApp')\n.controller('copyTableCtrl', function ($scope) {\n    $scope.loremIpsum = [\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sit',\n        'amet elit ut metus semper tempor ac vitae nunc. Fusce cursus odio',\n        'eget maximus vulputate. Nullam hendrerit enim vitae augue vulputate,',\n        'eu consequat tellus imperdiet. Duis magna dolor, scelerisque non',\n        'magna ac, bibendum interdum turpis. Phasellus placerat placerat',\n        'nunc, in sodales neque. Proin at urna quis tellus congue feugiat.',\n        'Praesent dictum porttitor tristique. In tincidunt dignissim ultricies.',\n        'Maecenas in turpis a odio dictum molestie.'\n    ].join(' ');\n});\n"
    },
    "feedback.simple": {
        "markup": "<div ng-controller=\"feedbackSimpleExampleCtrl\">\n\n    <rx-feedback id=\"rxFeedback\"></rx-feedback>\n    <span class=\"subdued\">(Will fallback to default email client)</span>\n\n    <hr/>\n\n    <rx-feedback on-submit=\"alwaysSucceed\" id=\"rxFeedbackSucceeds\"></rx-feedback>\n    <span class=\"subdued\">(Will Succeed)</span>\n\n    <rx-feedback on-submit=\"alwaysFail\" id=\"rxFeedbackFails\"></rx-feedback>\n    <span class=\"subdued\">(Will Fail)</span>\n\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('feedbackSimpleExampleCtrl', function ($scope, rxNotify) {\n    $scope.alwaysSucceed = function () {\n        rxNotify.add('Thanks for your feedback!', {\n            type: 'success',\n            timeout: 3\n        });\n    };\n\n    $scope.alwaysFail = function () {\n        rxNotify.add('Feedback not received!', {\n            type: 'error',\n            timeout: 3\n        });\n    };\n});\n"
    },
    "flex.col": {
        "markup": "<div class=\"flex-row\">\n  <div class=\"flex-col\"><p>One-Whole</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col\"><p>One-Half</p></div>\n  <div class=\"flex-col\"><p>One-Half</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col\"><p>One-Third</p></div>\n  <div class=\"flex-col\"><p>One-Third</p></div>\n  <div class=\"flex-col\"><p>One-Third</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col\"><p>One-Fourth</p></div>\n  <div class=\"flex-col\"><p>One-Fourth</p></div>\n  <div class=\"flex-col\"><p>One-Fourth</p></div>\n  <div class=\"flex-col\"><p>One-Fourth</p></div>\n</div>\n"
    },
    "flex.nesting": {
        "markup": "<div class=\"flex-row\">\n  <div class=\"flex-col span-2\"><p>.span-2</p></div>\n  <div class=\"flex-col span-8\">\n    <p>.span-8</p>\n    <div class=\"flex-row\">\n      <div class=\"flex-col span-6\">\n        <p>.span-6</p>\n        <div class=\"flex-row\">\n          <div class=\"flex-col span-4\"><p>.span-4</p></div>\n          <div class=\"flex-col span-4\"><p>.span-4</p></div>\n          <div class=\"flex-col span-4\"><p>.span-4</p></div>\n        </div>\n      </div>\n      <div class=\"flex-col span-6\">\n        <p>.span-6</p>\n        <div class=\"flex-row\">\n          <div class=\"flex-col span-6\"><p>.span-6</p></div>\n          <div class=\"flex-col span-6\"><p>.span-6</p></div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-col span-2\"><p>.span-2</p></div>\n</div>\n"
    },
    "flex.offset": {
        "markup": "<div class=\"flex-row\">\n  <div class=\"flex-col span-10 offset-1\"><p>.span-10<br />.offset-1</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col span-8 offset-2\"><p>.span-8<br />.offset-2</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col span-6 offset-3\"><p>.span-6<br />.offset-3</p></div>\n</div>\n"
    },
    "flex.order": {
        "markup": "<div class=\"flex-row\">\n  <div class=\"flex-col order-2 span-3\"><p>.order-2</p></div>\n  <div class=\"flex-col order-4 span-3\"><p>.order-4</p></div>\n  <div class=\"flex-col order-1 span-3\"><p>.order-1</p></div>\n  <div class=\"flex-col order-3 span-3\"><p>.order-3</p></div>\n</div>\n"
    },
    "flex.responsive": {
        "markup": "<div id=\"querySize\"></div>\n<div class=\"flex-row\">\n  <div class=\"demo flex-col span-xs-12 span-sm-4 span-md-3 span-lg-2 span-xl-1\"></div>\n  <div class=\"demo flex-col span-xs-6 span-sm-4 span-md-6 span-lg-8 span-xl-10\"></div>\n  <div class=\"demo flex-col span-xs-6 span-sm-4 span-md-3 span-lg-2 span-xl-1\"></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"demo flex-col span-xs-12 span-sm-4 span-md-3 span-lg-2 span-xl-1\"></div>\n  <div class=\"demo flex-col span-xs-12 span-sm-8 span-md-9 span-lg-10 span-xl-11\"></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"demo flex-col span-xs-12 span-sm-8 span-md-6 span-lg-4 span-xl-3\"></div>\n  <div class=\"demo flex-col span-xs-12 span-sm-4 span-md-6 span-lg-8 span-xl-9\"></div>\n</div>\n"
    },
    "flex.row": {
        "markup": "<div class=\"flex-row\">\n  This is a flex row. You can place content directly within this element.\n</div>\n"
    },
    "flex.span": {
        "markup": "<div class=\"flex-row\">\n  <div class=\"flex-col span-12\"><p>.span-12</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col span-6\"><p>.span-6</p></div>\n  <div class=\"flex-col span-6\"><p>.span-6</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col span-4\"><p>.span-4</p></div>\n  <div class=\"flex-col span-4\"><p>.span-4</p></div>\n  <div class=\"flex-col span-4\"><p>.span-4</p></div>\n</div>\n<div class=\"flex-row\">\n  <div class=\"flex-col span-3\"><p>.span-3</p></div>\n  <div class=\"flex-col span-3\"><p>.span-3</p></div>\n  <div class=\"flex-col span-3\"><p>.span-3</p></div>\n  <div class=\"flex-col span-3\"><p>.span-3</p></div>\n</div>\n"
    },
    "grid.col": {
        "markup": "<div class=\"grid-row\">\n  <div class=\"grid-col\"><p>One-Whole</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col\"><p>One-Half</p></div>\n  <div class=\"grid-col\"><p>One-Half</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col\"><p>One-Third</p></div>\n  <div class=\"grid-col\"><p>One-Third</p></div>\n  <div class=\"grid-col\"><p>One-Third</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col\"><p>One-Fourth</p></div>\n  <div class=\"grid-col\"><p>One-Fourth</p></div>\n  <div class=\"grid-col\"><p>One-Fourth</p></div>\n  <div class=\"grid-col\"><p>One-Fourth</p></div>\n</div>\n"
    },
    "grid.nesting": {
        "markup": "<div class=\"grid-row\">\n  <div class=\"grid-col span-4\"><p>.span-4</p></div>\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n  <div class=\"grid-col span-4\"><p>.span-4</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n  <div class=\"grid-col span-8\">\n    <p>.span-8</p>\n    <div class=\"grid-row\">\n      <div class=\"grid-col span-6\">\n        <p>.span-6</p>\n        <div class=\"grid-row\">\n          <div class=\"grid-col span-4\"><p>.span-4</p></div>\n          <div class=\"grid-col span-4\"><p>.span-4</p></div>\n          <div class=\"grid-col span-4\"><p>.span-4</p></div>\n        </div>\n      </div>\n      <div class=\"grid-col span-6\">\n        <p>.span-6</p>\n        <div class=\"grid-row\">\n          <div class=\"grid-col span-6\"><p>.span-6</p></div>\n          <div class=\"grid-col span-6\"><p>.span-6</p></div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-3\"><p>.span-3</p></div>\n  <div class=\"grid-col span-6\"><p>.span-6</p></div>\n  <div class=\"grid-col span-3\"><p>.span-3</p></div>\n</div>\n"
    },
    "grid.offset": {
        "markup": "<div class=\"grid-row\">\n  <div class=\"grid-col span-11 offset-1\"><p>.span-11<br />.offset-1</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-10 offset-2\"><p>.span-10<br />.offset-2</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-9 offset-3\"><p>.span-9<br />.offset-3</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-8 offset-4\"><p>.span-8<br />.offset-4</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-7 offset-5\"><p>.span-7<br />.offset-5</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-6 offset-6\"><p>.span-6<br />.offset-6</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-5 offset-7\"><p>.span-5<br />.offset-7</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-4 offset-8\"><p>.span-4<br />.offset-8</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-3 offset-9\"><p>.span-3<br />.offset-9</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-2 offset-10\"><p>.span-2<br />.offset-10</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-1 offset-11\"><p>.span-1<br />.offset-11</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-1 offset-1\"><p>.span-1<br />.offset-1</p></div>\n  <div class=\"grid-col span-6 offset-1\"><p>.span-6<br />.offset-1</p></div>\n  <div class=\"grid-col span-1 offset-1\"><p>.span-1<br />.offset-1</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-1 offset-1\"><p>.span-1<br />.offset-1</p></div>\n  <div class=\"grid-col span-8\"><p>.span-8</p></div>\n  <div class=\"grid-col span-1\"><p>.span-1</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-2 offset-1\"><p>.span-2<br />.offset-1</p></div>\n  <div class=\"grid-col span-4 offset-1\"><p>.span-4<br />.offset-1</p></div>\n  <div class=\"grid-col span-2 offset-1\"><p>.span-2<br />.offset-1</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-2 offset-1\"><p>.span-2<br />.offset-1</p></div>\n  <div class=\"grid-col span-6\"><p>.span-6</p></div>\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-3 offset-1\"><p>.span-3<br />.offset-1</p></div>\n  <div class=\"grid-col span-2 offset-1\"><p>.span-2<br />.offset-1</p></div>\n  <div class=\"grid-col span-3 offset-1\"><p>.span-3<br />.offset-1</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-3 offset-1\"><p>.span-3<br />.offset-1</p></div>\n  <div class=\"grid-col span-4\"><p>.span-4</p></div>\n  <div class=\"grid-col span-3\"><p>.span-3</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-5 offset-1\"><p>.span-5<br />.offset-1</p></div>\n  <div class=\"grid-col span-5\"><p>.span-5</p></div>\n</div>\n\n"
    },
    "grid.order": {
        "markup": "<div class=\"grid-row\">\n  <div class=\"grid-col order-2 span-3\"><p>.order-2</p></div>\n  <div class=\"grid-col order-4 span-3\"><p>.order-4</p></div>\n  <div class=\"grid-col order-1 span-3\"><p>.order-1</p></div>\n  <div class=\"grid-col order-3 span-3\"><p>.order-3</p></div>\n</div>\n"
    },
    "grid.responsive": {
        "markup": "<div id=\"querySize\"></div>\n<div class=\"grid-row\">\n  <div class=\"demo grid-col span-xs-12 span-sm-4 span-md-3 span-lg-2 span-xl-1\"></div>\n  <div class=\"demo grid-col span-xs-6 span-sm-4 span-md-6 span-lg-8 span-xl-10\"></div>\n  <div class=\"demo grid-col span-xs-6 span-sm-4 span-md-3 span-lg-2 span-xl-1\"></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"demo grid-col span-xs-12 span-sm-4 span-md-3 span-lg-2 span-xl-1\"></div>\n  <div class=\"demo grid-col span-xs-12 span-sm-8 span-md-9 span-lg-10 span-xl-11\"></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"demo grid-col span-xs-12 span-sm-8 span-md-6 span-lg-4 span-xl-3\"></div>\n  <div class=\"demo grid-col span-xs-12 span-sm-4 span-md-6 span-lg-8 span-xl-9\"></div>\n</div>\n"
    },
    "grid.row": {
        "markup": "<div class=\"grid-row\">\n  This is a Grid Row. You shouldn't put content directly in this element. Add at least one column, first.\n</div>\n"
    },
    "grid.span": {
        "markup": "<div class=\"grid-row\">\n  <div class=\"grid-col span-12\"><p>.span-12</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-1\"><p>.span-1</p></div>\n  <div class=\"grid-col span-11\"><p>.span-11</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n  <div class=\"grid-col span-10\"><p>.span-10</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-3\"><p>.span-3</p></div>\n  <div class=\"grid-col span-9\"><p>.span-9</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-4\"><p>.span-4</p></div>\n  <div class=\"grid-col span-8\"><p>.span-8</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-5\"><p>.span-5</p></div>\n  <div class=\"grid-col span-7\"><p>.span-7</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-6\"><p>.span-6</p></div>\n  <div class=\"grid-col span-6\"><p>.span-6</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-7\"><p>.span-7</p></div>\n  <div class=\"grid-col span-5\"><p>.span-5</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-8\"><p>.span-8</p></div>\n  <div class=\"grid-col span-4\"><p>.span-4</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-9\"><p>.span-9</p></div>\n  <div class=\"grid-col span-3\"><p>.span-3</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-10\"><p>.span-10</p></div>\n  <div class=\"grid-col span-2\"><p>.span-2</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-11\"><p>.span-11</p></div>\n  <div class=\"grid-col span-1\"><p>.span-1</p></div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col span-12\"><p>.span-12</p></div>\n</div>\n"
    },
    "characterCount.simple": {
        "markup": "<form rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-name>Character Counter:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <textarea\n            ng-model=\"data.characterCountText\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count>\n          </textarea>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n"
    },
    "checkbox.destroy": {
        "markup": "<p>\n  <input rx-checkbox\n         id=\"chkRemoveCheckbox\"\n         ng-model=\"chkIsRemoved\" />\n  <label for=\"chkRemoveCheckbox\">\n    Remove Following Checkbox:\n  </label>\n\n  <input rx-checkbox\n         checked\n         id=\"chkRemoveable\"\n         ng-if=\"!chkIsRemoved\" />\n</p>\n"
    },
    "checkbox.showHide": {
        "markup": "<div class=\"checkboxShowHideCtrl\">\n  <p>\n    <input rx-checkbox\n           id=\"chkAmSure\"\n           ng-model=\"amSure\"\n           ng-required=\"true\" />\n    <label for=\"chkAmSure\">Are you sure?</label>\n    <small>({{amSure ? 'true' : 'false'}})</small>\n    <br />\n    <sub><em>Valid only if checked</em></sub>\n  </p>\n  <p ng-show=\"amSure\">\n    <input rx-checkbox\n           id=\"chkAmReallySure\"\n           ng-model=\"amReallySure\" />\n    <label for=\"chkAmReallySure\">Are you REALLY sure?</label>\n    <small>({{amReallySure ? 'true' : 'false'}})</small>\n  </p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('checkboxShowHideCtrl', function ($scope) {\n    $scope.amSure = false;\n    $scope.amReallySure = false;\n\n    $scope.$watch('amSure', function (newVal) {\n        if (newVal === false) {\n            $scope.amReallySure = false;\n        }\n    });\n});\n"
    },
    "datePicker.empty": {
        "markup": "<form rx-form name=\"emptyForm\" ng-controller=\"datePickerEmptyCtrl\">\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-name>Empty String:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-date-picker\n            id=\"dpEmpty\"\n            ng-model=\"emptyDate\"></rx-date-picker>\n        </rx-input>\n        <rx-help-text>Bound Value: {{emptyDate || 'N/A'}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n    <rx-field>\n      <rx-field-name>Undefined Value:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-date-picker\n            id=\"dpUndefined\"\n            ng-model=\"undefinedDate\"></rx-date-picker>\n        </rx-input>\n        <rx-help-text>Bound Value: {{undefinedDate || 'N/A'}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('datePickerEmptyCtrl', function ($scope) {\n    $scope.emptyDate = '';\n\n    $scope.undefinedDate = undefined;\n});\n"
    },
    "datePicker.simple": {
        "markup": "<form rx-form name=\"simpleForm\" ng-controller=\"datePickerSimpleCtrl\">\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-name>Basic Date Picker:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-date-picker\n            id=\"dpSimple\"\n            ng-model=\"dateModel\"></rx-date-picker>\n        </rx-input>\n        <rx-help-text>Bound Value: {{dateModel || 'N/A'}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('datePickerSimpleCtrl', function ($scope) {\n    $scope.dateModel = moment(new Date()).format('YYYY-MM-DD');\n});\n"
    },
    "forms.advancedcontrols": {
        "markup": "<form rx-form ng-controller=\"formAdvancedControlsDemoCtrl\">\n\n  <h4>With <code>stacked</code> section attribute</h4>\n  <rx-help-text>\n    To obtain a stacked layout, place the <code>stacked</code>\n    attribute on <code>rx-form-section</code>.\n  </rx-help-text>\n\n  <rx-form-section stacked>\n    <!-- Radio Option + Select -->\n    <rx-field>\n      <h5>Radio + Select</h5>\n      <rx-field-content>\n        <rx-input>\n          <rx-prefix>\n            <input rx-radio\n              id=\"radDefault\"\n              name=\"radAdvanced\"\n              ng-model=\"radChoice\"\n              value=\"default\" />\n            <label for=\"radDefault\">Default</label>\n          </rx-prefix>\n        </rx-input>\n        <rx-input>\n          <rx-prefix>\n            <input rx-radio\n              id=\"radCustom\"\n              name=\"radAdvanced\"\n              ng-model=\"radChoice\"\n              value=\"custom\" />\n            <label for=\"radCustom\">Custom:</label><br />\n          </rx-prefix>\n          <select rx-select ng-disabled=\"radChoice !== 'custom'\">\n            <option>Option 1</option>\n            <option>Option 2</option>\n            <option>Option 3</option>\n          </select>\n        </rx-input>\n        <rx-help-text>\n          Useful for condensing large radio groups.\n        </rx-help-text>\n      </rx-field-content>\n    </rx-field>\n\n    <!-- Checkbox + Text -->\n    <rx-field>\n      <h5>Checkbox + Text Input</h5>\n      <rx-field-content>\n        <rx-input>\n          <rx-prefix>\n            <input rx-checkbox ng-model=\"inputEnabled\" />\n            <label>Label:</label>\n          </rx-prefix>\n          <input type=\"text\"\n            ng-disabled=\"!inputEnabled\"\n            placeholder=\"Enter Text\" />\n        </rx-input>\n        <rx-help-text>\n          Useful for if you want the user to add an optional value, but displaying\n          the field as disabled by default.\n        </rx-help-text>\n      </rx-field-content>\n    </rx-field>\n\n  </rx-form-section>\n\n  <h4>With <code>controlled-width</code> section attribute</h4>\n  <rx-help-text>\n    To prevent fields from taking up too much horizontal space, use the <code>controlled-width</code>\n    attribute on <code>rx-form-section</code>. The fields will still stack if horizontal space is\n    constrained, but they will not exceed a reasonable field width.\n  </rx-help-text>\n\n  <rx-form-section controlled-width>\n    <!-- Dropdown + Text + Dropdown -->\n    <rx-field>\n      <h5>Dropdown + Text Input + Dropdown</h5>\n      <rx-field-name>Name:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-prefix>\n            <select rx-select>\n              <option></option>\n              <option>Mr.</option>\n              <option>Mrs.</option>\n              <option>Ms.</option>\n            </select>\n          </rx-prefix>\n          <input type=\"text\" />\n          <rx-suffix>\n            <select rx-select>\n              <option></option>\n              <option>Jr.</option>\n              <option>Sr.</option>\n            </select>\n          </rx-suffix>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <h5>Using <code>rx-search-box</code>.</h5>\n      <rx-field-name>Search Box:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-search-box\n            ng-model=\"demoSearch\"\n            rx-placeholder=\"'Filter by...'\"></rx-search-box>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formAdvancedControlsDemoCtrl', function ($scope) {\n    $scope.radChoice = 'default';\n    $scope.inputEnabled = false;\n});\n"
    },
    "forms.advancedtextarea": {
        "markup": "<form rx-form name=\"formAdvancedTextArea\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name\n        id=\"fieldNameRequiredTextarea\"\n        ng-required=\"true\">Required Textarea:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <textarea\n            name=\"lifeStory\"\n            rows=\"10\"\n            ng-required=\"true\"\n            ng-model=\"lifeStory\"\n            rx-character-count></textarea>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n    <div>\n      <rx-help-text>\n        <p>\n          Oh look! It's using <code>rx-character-count</code>\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus id ligula sit amet \n          rhoncus. Quisque semper mi vel tortor sodales, eget dapibus turpis consectetur. Ut tristique \n          nibh porttitor diam porta finibus. Vivamus porttitor ligula sed ipsum rhoncus, id lobortis ex \n          volutpat. Ut ut metus erat. Nam et convallis enim. Proin efficitur quam tortor, vitae hendrerit \n          libero auctor ac. Sed vitae lobortis quam, quis commodo metus. Vestibulum felis arcu, \n          consectetur ut vulputate nec, commodo ut odio.\n        </p>\n      </rx-help-text>\n      <span ng-if=\"formAdvancedTextArea.lifeStory.$dirty\">\n        <rx-inline-error ng-show=\"formAdvancedTextArea.lifeStory.$error.required\">\n          Cannot Be Blank\n        </rx-inline-error>\n      </span>\n    </div>\n  </rx-form-section>\n</form>\n"
    },
    "forms.autoSave": {
        "markup": "<p>\n  The text input below will automatically save its content. If you navigate\n  away from this page, and then return, whatever you previously typed will\n  automatically be populated into the text input\n</p>\n<form ng-controller=\"formsAutoSaveExampleController\" rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\" ng-model=\"forms.autosave\">\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formsAutoSaveExampleController', function ($scope, rxAutoSave) {\n    $scope.forms = { autosave: '' };\n    rxAutoSave($scope, 'forms');\n});\n"
    },
    "forms.checkboxOptionTable": {
        "markup": "<form rx-form ng-controller=\"formCheckboxOptionTableDemoCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-option-table\n            columns=\"optionTableColumns\"\n            type=\"checkbox\"\n            id=\"checkboxOptionTable\"\n            model=\"table.checkbox\"\n            field-id=\"optionCheckboxTable\"\n            data=\"optionTableCheckboxData\"\n            required=\"true\">\n          </rx-option-table>\n        </rx-input>\n        <rx-help-text ng-repeat=\"val in table.checkbox\">\n          Item {{$index + 1}} Value: {{val}}\n        </rx-help-text>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formCheckboxOptionTableDemoCtrl', function ($scope) {\n\n    $scope.optionTableColumns = [\n        {\n            'label': 'Name',\n            'key': 'name',\n            'selectedLabel': '(Already saved data)'\n        }, {\n            'label': 'Static Content',\n            'key': 'Some <strong>Text &</strong> HTML'\n        }, {\n            'label': 'Expression 2',\n            'key': '{{ value * 100 | number:2 }}'\n        }, {\n            'label': 'Expression 3',\n            'key': '{{ obj.name | uppercase }}'\n        }, {\n            'label': 'Expression 4',\n            'key': '{{ value | currency }}'\n        }\n    ];\n\n    $scope.optionTableCheckboxData = [\n        {\n            'name': 'Item 1'\n        }, {\n            'name': 'Item 2',\n            'value': 'checked',\n            'falseValue': 'unchecked'\n        }\n    ];\n    // example with first checkbox automatically checked\n    $scope.table = {\n        checkbox: [true, 'unchecked']\n    };\n});\n"
    },
    "forms.disabled": {
        "markup": "<h4>Disabled Form Controls</h4>\n<form rx-form ng-controller=\"formsDisabledExamplesCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name>Disabled Text Input</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\" value=\"{{txtDisabled}}\" disabled />\n        </rx-input>\n      </rx-field-content>\n\n      <rx-field-name>Disabled Select</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <select rx-select disabled ng-model=\"selDisabled\">\n            <option value=\"disabled\">Disabled Dropdown</option>\n          </select>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name>Disabled Radio</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input rx-radio id=\"radDisabledOne\" value=\"1\" name=\"radDisabled\" ng-model=\"radDisabled\" disabled />\n          <label for=\"radDisabledOne\">Selected Option</label>\n        </rx-input>\n        <rx-input>\n          <input rx-radio id=\"radDisabledTwo\" value=\"2\" name=\"radDisabled\" ng-model=\"radDisabled\" disabled />\n          <label for=\"radDisabledTwo\">Unselected Option</label>\n        </rx-input>\n      </rx-field-content>\n\n      <rx-field-name>Disabled Checkbox</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input rx-checkbox id=\"chkDisabledOne\" ng-model=\"chkDisabledOne\" disabled />\n          <label for=\"chkDisabledOne\">Checked Option</label>\n        </rx-input>\n        <rx-input>\n          <input rx-checkbox id=\"chkDisabledTwo\" ng-model=\"chkDisabledTwo\" disabled />\n          <label for=\"chkDisabledTwo\">Unchecked Option</label>\n        </rx-input>\n      </rx-field-content>\n\n      <rx-field-name>Disabled Toggle Switch</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-toggle-switch id=\"togDisabledOn\" ng-model=\"togDisabledOn\" ng-disabled=\"true\"></rx-toggle-switch>\n          <label for=\"togDisabledOn\">Toggled ON Option</label>\n        </rx-input>\n        <rx-input>\n          <rx-toggle-switch id=\"togDisabledOff\" ng-model=\"togDisabledOff\" ng-disabled=\"true\"></rx-toggle-switch>\n          <label for=\"togDisabledOff\">Toggled OFF Option</label>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name>Disabled Textarea</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <textarea ng-model=\"txtAreaDisabled\" disabled rows=\"8\">{{txtAreaDisabled}}</textarea>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formsDisabledExamplesCtrl', function ($scope) {\n    $scope.txtDisabled = 'Disabled Text Input';\n    $scope.selDisabled = 'disabled';\n    $scope.radDisabled = 1;\n    $scope.chkDisabledOne = true;\n    $scope.chkDisabledTwo = false;\n    $scope.togDisabledOn = true;\n    $scope.togDisabledOff = false;\n    $scope.txtAreaDisabled = 'Disabled Textarea';\n});\n"
    },
    "forms.dropdown": {
        "markup": "<form rx-form ng-controller=\"formDropDownDemoCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <h4>Single Selection</h4>\n      <rx-field-name>Volume Type:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <select rx-select ng-model=\"volumeType\" id=\"selVolumeType\">\n            <option ng-repeat=\"type in volumeTypes\"\n              value=\"{{type.value}}\"\n              ng-selected=\"{{type.value == model}}\">{{type.label}}</option>\n          </select>\n        </rx-input>\n        <rx-help-text>Bound Value: {{volumeType}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <h4>Multiple Selection</h4>\n      <rx-field-name>Service Options:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-multi-select ng-model=\"selectedServices\" id=\"mselServices\">\n            <rx-select-option ng-repeat=\"service in services\" value=\"{{service.value}}\">{{service.label}}</rx-select-option>\n          </rx-multi-select>\n        </rx-input>\n        <rx-help-text>Bound Value: {{selectedServices}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n\n  </rx-form-section>\n</form>",
        "javascript": "angular.module('demoApp')\n.controller('formDropDownDemoCtrl', function ($scope) {\n    /* ========== DATA ========== */\n    $scope.volumeTypes = [\n        {\n            'value': 'SATA',\n            'label': 'SATA'\n        },\n        {\n            'value': 'SSD',\n            'label': 'SSD'\n        },\n        {\n            'value': 'CD',\n            'label': 'CD'\n        },\n        {\n            'value': 'DVD',\n            'label': 'DVD'\n        },\n        {\n            'value': 'BLURAY',\n            'label': 'BLURAY'\n        },\n        {\n            'value': 'TAPE',\n            'label': 'TAPE'\n        },\n        {\n            'value': 'FLOPPY',\n            'label': 'FLOPPY'\n        },\n        {\n            'value': 'LASERDISC',\n            'label': 'LASERDISC'\n        },\n        {\n            'value': 'JAZDRIVE',\n            'label': 'JAZDRIVE'\n        },\n        {\n            'value': 'PUNCHCARDS',\n            'label': 'PUNCHCARDS'\n        },\n        {\n            'value': 'RNA',\n            'label': 'RNA'\n        }\n    ];\n\n    $scope.services = [\n        {\n            'value': 'good',\n            'label': 'Good Service'\n        },\n        {\n            'value': 'cheap',\n            'label': 'Cheap Service'\n        },\n        {\n            'value': 'fast',\n            'label': 'Fast Service'\n        },\n        {\n            'value': 'custom',\n            'label': 'Custom Service'\n        }\n    ];\n    // select the first type by default\n    $scope.volumeType = _.head($scope.volumeTypes).value;\n    $scope.selectedServices = [];\n});\n"
    },
    "forms.emptyOptionTable": {
        "markup": "<form rx-form ng-controller=\"formEmptyOptionTableDemoCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-option-table\n            columns=\"optionTableColumns\"\n            type=\"checkbox\"\n            id=\"emptyOptionTable\"\n            model=\"table.empty\"\n            field-id=\"optionCheckboxTable\"\n            data=\"optionTableEmptyData\"\n            empty-message=\"You don't have any data!\">\n          </rx-option-table>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formEmptyOptionTableDemoCtrl', function ($scope) {\n  \n    $scope.optionTableColumns = [\n        {\n            'label': 'Name',\n            'key': 'name',\n            'selectedLabel': '(Already saved data)'\n        }, {\n            'label': 'Static Content',\n            'key': 'Some <strong>Text &</strong> HTML'\n        }, {\n            'label': 'Expression 2',\n            'key': '{{ value * 100 | number:2 }}'\n        }, {\n            'label': 'Expression 3',\n            'key': '{{ obj.name | uppercase }}'\n        }, {\n            'label': 'Expression 4',\n            'key': '{{ value | currency }}'\n        }\n    ];\n\n    $scope.optionTableEmptyData = [];\n\n    $scope.table = {\n        empty: [true, 'unchecked']\n    };\n});\n"
    },
    "forms.formactions": {
        "markup": "<form rx-form>\n  <rx-form-section>\n    <div>\n      <button class=\"button submit\" type=\"submit\">Submit Form</button>\n      <button class=\"button cancel\" type=\"submit\">Cancel</button>\n    </div>\n  </rx-form-section>\n</form>\n"
    },
    "forms.inputgroups": {
        "markup": "<form rx-form ng-controller=\"formInputGroupsDemoCtrl\">\n  <rx-form-section>\n    <!-- rxRadio -->\n    <rx-field>\n      <h4>Radio Group</h4>\n      <rx-field-name>Favorite Beatles Member:</rx-field-name>\n      <rx-field-content>\n        <rx-input ng-repeat=\"beatle in beatles\">\n          <input rx-radio\n            name=\"favBeatle\"\n            id=\"favBeatle_{{$index}}\"\n            value=\"{{beatle}}\"\n            ng-model=\"favoriteBeatle\" />\n          <label for=\"favBeatle_{{$index}}\">{{beatle}}</label>\n        </rx-input>\n        <rx-input>\n          <input rx-radio\n            name=\"favBeatle\"\n            id=\"favBeatle_all\"\n            value=\"all\"\n            ng-model=\"favoriteBeatle\" />\n          <label for=\"favBeatle_all\">All of the above</label>\n        </rx-input>\n        <rx-input>\n          <input rx-radio\n            name=\"favBeatle\"\n            id=\"favBeatle_none\"\n            value=\"none\"\n            disabled\n            ng-model=\"favoriteBeatle\" />\n          <label for=\"favBeatle_none\">None of the above</label>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <!-- rxCheckbox -->\n    <rx-field>\n      <h4>Checkbox Group</h4>\n      <rx-field-name>Rick Astley Will Never:</rx-field-name>\n      <rx-field-content>\n        <rx-input ng-repeat=\"never in nevers\">\n          <input rx-checkbox\n            id=\"chkNever_{{$index}}\"\n            checked\n            value=\"{{never}}\" />\n          <label for=\"chkNever_{{$index}}\">{{never}}</label>\n        </rx-input>\n        <rx-input>\n          <input rx-checkbox\n            id=\"chkNever_all\"\n            value=\"all\"\n            checked\n            disabled />\n          <label for=\"chkNever_all\">All of the above</label>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <!-- rxToggleSwitch -->\n    <rx-field>\n      <h4>Toggle Switches</h4>\n      <rx-field-name>Settings:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-prefix>\n            <rx-toggle-switch\n              id=\"setting1\"\n              ng-model=\"settings.first\">\n            </rx-toggle-switch>\n            <label for=\"setting1\">Setting 1</label>\n          </rx-prefix>\n        </rx-input>\n\n        <rx-input>\n          <rx-prefix>\n            <rx-toggle-switch\n              id=\"setting2\"\n              ng-model=\"settings.second\">\n            </rx-toggle-switch>\n            <label for=\"setting2\">Setting 2</label>\n          </rx-prefix>\n        </rx-input>\n\n        <rx-input>\n          <rx-prefix>\n            <rx-toggle-switch\n              id=\"setting3\"\n              ng-model=\"settings.third\"\n              ng-disabled=\"true\">\n            </rx-toggle-switch>\n            <label for=\"setting3\">Setting 3</label>\n          </rx-prefix>\n        </rx-input>\n\n        <rx-input>\n          <rx-prefix>\n            <rx-toggle-switch\n              id=\"setting4\"\n              ng-model=\"settings.fourth\"\n              ng-disabled=\"true\">\n            </rx-toggle-switch>\n            <label for=\"setting4\">Setting 4</label>\n          </rx-prefix>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formInputGroupsDemoCtrl', function ($scope) {\n    /* ========== DATA ========== */\n    $scope.beatles = [\n        'Paul McCartney',\n        'John Lennon',\n        'Ringo Starr',\n        'George Harrison'\n    ];\n\n    $scope.nevers = [\n        'Give you up',\n        'Let you down',\n        'Run around',\n        'Desert you',\n        'Make you cry',\n        'Say goodbye',\n        'Tell a lie',\n        'Hurt you'\n    ];\n\n    $scope.favoriteBeatle = 'all';\n    $scope.settings = {\n        first: true,\n        second: false,\n        third: true,\n        fourth: false\n    };\n\n});\n"
    },
    "forms.intermediatecontrols": {
        "markup": "<form rx-form ng-controller=\"formIntermediateControlsDemoCtrl\" name=\"formIntermediateControls\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name\n        ng-required=\"isNameRequired\"\n        id=\"fieldNameVolumeName\">Volume Name:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\"\n            id=\"txtVolumeName\"\n            name=\"txtVolumeName\"\n            ng-model=\"volumeName\"\n            ng-required=\"isNameRequired\"\n            ng-pattern=\"/^\\b(\\w)?(\\w)\\w?\\2\\1$/\" />\n        </rx-input>\n        <rx-help-text>Must be 2-5 letter palindrome (e.g. 'dewed')</rx-help-text>\n        <rx-help-text>Bound Value: {{volumeName}}</rx-help-text>\n        <rx-input>\n          <input rx-checkbox\n            id=\"chkVolumeNameRequired\"\n            ng-model=\"isNameRequired\" />\n          <label for=\"chkVolumeNameRequired\">\n            Check and uncheck with empty volume name to see border\n          </label>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name>Email Address:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input name=\"userEmail\" type=\"email\" ng-model=\"userEmail\" foocheck />\n        </rx-input>\n        <rx-help-text>Must contain foo.</rx-help-text>\n        <div ng-if=\"formIntermediateControls.userEmail.$dirty && formIntermediateControls.userEmail.$invalid\">\n          <div ng-messages=\"formIntermediateControls.userEmail.$error\" ng-messages-multiple>\n            <rx-inline-error ng-message=\"email\">\n              Invalid Email\n            </rx-inline-error>\n            <rx-inline-error ng-message=\"foocheck\">\n              Your email must contain 'foo'\n            </rx-inline-error>\n          </div>\n        </div>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>",
        "javascript": "angular.module('demoApp')\n.controller('formIntermediateControlsDemoCtrl', function ($scope) {\n    $scope.userEmail = '';\n    $scope.isNameRequired = true;\n    $scope.volumeName = '';\n})\n.directive('foocheck', function () {\n    return {\n        require: 'ngModel',\n        link: function (scope, elm, attrs, ctrl) {\n            ctrl.$validators.foocheck = function (modelValue, viewValue) {\n                var value = modelValue || viewValue;\n                return _.includes(value, 'foo');\n            }\n        }\n    };\n});\n"
    },
    "forms.manualSave": {
        "markup": "<rx-page title=\"'Forms'\">\n  <form rx-form name=\"form\" ng-controller=\"formsManualSaveExampleController\" style=\"clear: both;\">\n    <rx-notification ng-if=\"form.$dirty\" type=\"info\" stack=\"page\">\n      Changes made are not automatically saved. Click \"Save Now\" to save changes.\n    </rx-notification>\n\n    <h3 class=\"subdued\">\n      <span ng-show=\"lastSaved\">Last saved {{lastSaved | date:'medium'}}</span>\n      <span ng-hide=\"lastSaved\">Unsaved changes.</span>\n      <rx-button\n        classes=\"submit xs inline\"\n        ng-click=\"form.$setPristine(); save()\"\n        default-msg=\"Save Now\"\n        toggle-msg=\"Saving\"\n        toggle=\"saving\"\n        ng-disabled=\"form.$invalid || form.$pristine\">\n      </rx-button>\n    </h3>\n\n    <rx-form-section style=\"width: 200px;\">\n      <rx-field>\n        <rx-field-name>Field:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\"\n              name=\"field\"\n              ng-model=\"text\"\n              placeholder=\"Enter some text\"\n              ng-pattern=\"/^\\w+$/\"\n              ng-required />\n          </rx-input>\n          <rx-help-text>May not contain symbols</rx-help-text>\n\n          <rx-inline-error ng-show=\"form.field.$error.pattern\">\n            There are symbols in the entered text.\n          </rx-inline-error>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n  </form>\n</rx-page>\n",
        "javascript": "angular.module('demoApp')\n.controller('formsManualSaveExampleController', function ($scope, $timeout, rxNotify) {\n    $scope.saving = false;\n    $scope.save = function () {\n        $scope.saving = true;\n        rxNotify.clear('page');\n        $timeout(function () {\n            $scope.saving = false;\n            $scope.lastSaved = Date.now();\n            rxNotify.add('Data successfully saved!', {\n                type: 'success'\n            });\n        }, 1000);\n    };\n});\n"
    },
    "forms.radioOptionTable": {
        "markup": "<form rx-form ng-controller=\"formRadioOptionTableDemoCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-option-table\n            id=\"radioOptionTable\"\n            data=\"optionTableData\"\n            columns=\"optionTableColumns\"\n            type=\"radio\"\n            model=\"table.radio\"\n            field-id=\"optionTable\"\n            selected=\"0\"\n            class=\"full-width\"\n            disable-fn=\"disableOption(tableId, fieldId, rowId)\">\n          </rx-option-table>\n        </rx-input>\n        <rx-help-text>Bound Value: {{table.radio}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formRadioOptionTableDemoCtrl', function ($scope) {\n    \n    $scope.optionTableData = [\n        {\n            'id': 'option1_id',\n            'name': 'Option #1',\n            'value': 0,\n            'obj': {\n                'name': 'Nested Name 1'\n            }\n        }, {\n            'id': 'option2_id',\n            'name': 'Option #2',\n            'value': 1,\n            'obj': {\n                'name': 'Nested Name 2'\n            }\n        }, {\n            'id': 'option3_id',\n            'name': 'Option #3',\n            'value': 2,\n            'obj': {\n                'name': 'Nested Name 3'\n            }\n        }, {\n            'id': 'option4_id',\n            'name': 'Option #4',\n            'value': 3,\n            'obj': {\n                'name': 'Nested Name 4'\n            }\n        }\n    ];\n\n    $scope.optionTableColumns = [\n        {\n            'label': 'Name',\n            'key': 'name',\n            'selectedLabel': '(Already saved data)'\n        }, {\n            'label': 'Static Content',\n            'key': 'Some <strong>Text &</strong> HTML'\n        }, {\n            'label': 'Expression 2',\n            'key': '{{ value * 100 | number:2 }}'\n        }, {\n            'label': 'Expression 3',\n            'key': '{{ obj.name | uppercase }}'\n        }, {\n            'label': 'Expression 4',\n            'key': '{{ value | currency }}'\n        }\n    ];\n    /* ========== FUNCTIONS ========== */\n    $scope.disableOption = function (tableId, fieldId, rowId) {\n        return rowId === 'option4_id';\n    };\n\n    $scope.table = {\n        radio: 0\n    };\n});\n"
    },
    "forms.radios": {
        "markup": "<form rx-form>\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name>Reboot:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input rx-radio name=\"type\" id=\"server_reboot_soft\" value=\"soft\" ng-model=\"fields.reboot_type\" required>\n          <label for=\"server_reboot_soft\">Soft</label>\n        </rx-input>\n        <rx-help-text>\n          Performs a graceful shutdown of your system. Services are halted individually and the system is restarted.\n        </rx-help-text>\n\n        <rx-input>\n          <input rx-radio name=\"type\" id=\"server_reboot_hard\" value=\"hard\" ng-model=\"fields.reboot_type\" required>\n          <label for=\"server_reboot_hard\">Hard</label>\n        </rx-input>\n        <rx-help-text>\n          Performs an immediate shutdown of your server. This is the equivalent of unplugging your server.\n        </rx-help-text>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n"
    },
    "forms.simple": {
        "markup": "<form rx-form>\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name id=\"fieldNamePlainTextbox\">Plain Textbox:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\" id=\"txtPlain\" />\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name id=\"fieldIpTextbox\">IP Address:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input name=\"ipaddress\"\n            type=\"text\"\n            disabled\n            placeholder=\"127.0.0.1\" />\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name id=\"fieldCostTextbox\">Monthly Cost:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-prefix>$</rx-prefix>\n          <input type=\"number\" />\n          <rx-suffix>million</rx-suffix>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n  </rx-form-section>\n</form>\n"
    },
    "forms.textarea": {
        "markup": "<form rx-form>\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name>Life Story:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <textarea name=\"lifeStory\" rows=\"10\"></textarea>\n        </rx-input>\n        <rx-help-text>\n          The <code>cols</code> attribute is moot, CSS will handle the width.\n        </rx-help-text>\n      </rx-field-content>\n    </rx-field>\n\n  </rx-form-section>\n</form>\n"
    },
    "forms.validation": {
        "markup": "<form rx-form ng-controller=\"formsInvalidExamplesCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name>Invalid Text Input</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\" always-invalid ng-model=\"txtInvalid\" />\n        </rx-input>\n      </rx-field-content>\n\n      <rx-field-name>Invalid Dropdown</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <select rx-select always-invalid ng-model=\"selInvalid\">\n            <option value=\"invalid\">Invalid Option</option>\n          </select>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name>Invalid Radio</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input rx-radio always-invalid id=\"radInvalidOne\" name=\"radInvalid\" value=\"1\" ng-model=\"radInvalid\" />\n          <label for=\"radInvalidOne\">Selected Option</label>\n        </rx-input>\n        <rx-input>\n          <input rx-radio always-invalid id=\"radInvalidTwo\" name=\"radInvalid\" value=\"2\" ng-model=\"radInvalid\" />\n          <label for=\"radInvalidTwo\">Unselected Option</label>\n        </rx-input>\n      </rx-field-content>\n\n      <rx-field-name>Invalid Checkbox</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input rx-checkbox always-invalid id=\"chkInvalidOne\" value=\"1\" ng-model=\"chkInvalidOne\" />\n          <label for=\"chkInvalidOne\">Checked Option</label>\n        </rx-input>\n        <rx-input>\n          <input rx-checkbox always-invalid id=\"chkInvalidTwo\" value=\"2\" ng-model=\"chkInvalidTwo\" />\n          <label for=\"chkInvalidTwo\">Unchecked Option</label>\n        </rx-input>\n      </rx-field-content>\n\n      <!-- Uncomment if/when \"invalid\" styles available -->\n      <!--\n        <rx-field-name>Invalid Toggle Switch</rx-field-name>\n        <rx-field-content>\n        <rx-input>\n        <rx-toggle-switch always-invalid id=\"togInvalidOn\" ng-model=\"togInvalidOn\"></rx-toggle-switch>\n        <label for=\"togInvalidOn\">Toggled ON Option</label>\n        </rx-input>\n        <rx-input>\n        <rx-toggle-switch id=\"togInvalidOff\" ng-model=\"togInvalidOff\"></rx-toggle-switch>\n        <label for=\"togInvalidOff\">Toggled OFF Option</label>\n        </rx-input>\n        </rx-field-content>\n      -->\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name>Invalid Textarea</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <textarea rows=\"8\" always-invalid ng-model=\"txtAreaInvalid\">{{txtAreaInvalid}}</textarea>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('formsInvalidExamplesCtrl', function ($scope) {\n    $scope.txtInvalid = 'Invalid text input';\n    $scope.selInvalid = 'invalid';\n    $scope.radInvalid = 1;\n    $scope.chkInvalidOne = true;\n    $scope.chkInvalidTwo = false;\n    $scope.togInvalidOn = true;\n    $scope.togInvalidOff = false;\n    $scope.txtAreaInvalid = 'Invalid Value';\n});\n"
    },
    "multiSelect.simple": {
        "markup": "<form rx-form ng-controller=\"multiSelectSimpleCtrl\">\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-name>Classification:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-multi-select ng-model=\"classification\" id=\"classification\">\n            <rx-select-option value=\"A\">Type A</rx-select-option>\n            <rx-select-option value=\"B\">Type B</rx-select-option>\n            <rx-select-option value=\"C\">Type C</rx-select-option>\n            <rx-select-option value=\"D\">Type D</rx-select-option>\n          </rx-multi-select>\n        </rx-input>\n        <p>Model Value: {{ classification | json }}</p>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('multiSelectSimpleCtrl', function ($scope) {\n    $scope.classification = [];\n});\n"
    },
    "radio.destroy": {
        "markup": "<div ng-controller=\"radioDestroyCtrl\">\n  <p>\n    <span>\n      <input \n        rx-radio\n        id=\"radDestroyed\"\n        value=\"destroyed\"\n        ng-model=\"radCreateDestroy\" />\n      <label for=\"radDestroy\">Destroyed</label>\n    </span>\n    &nbsp;\n    <span>\n      <input \n        rx-radio\n        id=\"radCreated\"\n        value=\"created\"\n        ng-model=\"radCreateDestroy\" />\n      <label for=\"radCreate\">Created</label>\n    </span>\n  </p>\n  <p>\n    The following radio is <code>{{radCreateDestroy}}</code>:\n    <input \n      rx-radio\n      checked\n      id=\"radTargetCreated\"\n      ng-if=\"radCreateDestroy === 'created'\" />\n  </p>\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('radioDestroyCtrl', function ($scope) {\n    $scope.radCreateDestroy = 'destroyed';\n});\n"
    },
    "radio.showHide": {
        "markup": "<p>\n  <strong>Do you like bacon?</strong>\n  <small ng-show=\"likesbacon\">({{likesbacon}})</small>\n</p>\n<p>\n  <input \n    rx-radio\n    id=\"radHateBacon\"\n    value=\"hate it\"\n    ng-model=\"likesbacon\"\n    ng-required=\"true\"/>\n  <label for=\"radHateBacon\">I hate bacon</label>\n</p>\n<p>\n  <input \n    rx-radio\n    id=\"radLikeBacon\"\n    value=\"like it\"\n    ng-model=\"likesbacon\"\n    ng-required=\"true\"/>\n  <label for=\"radLikeBacon\">I like bacon</label>\n</p>\n<p ng-show=\"likesbacon && likesbacon !== 'hate it'\">\n  <input \n    rx-radio\n    id=\"radLoveBacon\"\n    value=\"love it\"\n    ng-model=\"likesbacon\"\n    ng-required=\"true\"/>\n  <label for=\"radLoveBacon\">Actually, I LOVE bacon</label>\n</p>\n"
    },
    "searchBox.custom": {
        "markup": "<form rx-form ng-controller=\"searchBoxCustomCtrl\">\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-search-box\n            class=\"custom-search-box\"\n            ng-model=\"customSearchModel\"\n            rx-placeholder=\"filterPlaceholder\">\n          </rx-search-box>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n",
        "javascript": "angular.module('demoApp')\n.controller('searchBoxCustomCtrl', function ($scope) {\n    $scope.filterPlaceholder = 'Filter by any...';\n});\n"
    },
    "searchBox.disabled": {
        "markup": "<form rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-search-box\n            class=\"disabled-search-box\"\n            ng-model=\"searchModel\"\n            ng-disabled=\"true\">\n          </rx-search-box>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n"
    },
    "searchBox.simple": {
        "markup": "<form rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-search-box\n            class=\"default-search-box\"\n            ng-model=\"searchModel\">\n          </rx-search-box>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>\n"
    },
    "select.destroy": {
        "markup": "<form rx-form ng-controller=\"selectDestroyCtrl\">\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <input \n            rx-radio\n            id=\"radDestroyed\"\n            value=\"destroyed\"\n            ng-model=\"radCreateDestroy\" />\n          <label for=\"radDestroyed\">Destroyed</label>\n        </rx-input>\n        <rx-input>\n          <input \n            rx-radio\n            id=\"radCreated\"\n            value=\"created\"\n            ng-model=\"radCreateDestroy\" />\n          <label for=\"radCreated\">Created</label>\n        </rx-input>\n        <p>\n          The following select is <code>{{radCreateDestroy}}</code>:\n        </p>\n        <rx-input>\n          <select\n            rx-select\n            id=\"selTargetCreated\"\n            ng-if=\"radCreateDestroy === 'created'\">\n            <option>CREATED!</option>\n          </select>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>",
        "javascript": "angular.module('demoApp')\n.controller('selectDestroyCtrl', function ($scope) {\n    $scope.radCreateDestroy = 'destroyed';\n});\n"
    },
    "select.showHide": {
        "markup": "<form rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-content>\n        <rx-input>\n          <rx-prefix>\n            <input rx-checkbox id=\"chkShow\" ng-model=\"isShown\" />\n            <label for=\"chkShow\">Show?</label>\n          </rx-prefix>\n        </rx-input>\n        <rx-input ng-show=\"isShown\">\n          <select rx-select id=\"selTargetShow\">\n            <option>I'm visible!</option>\n          </select>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>"
    },
    "select.simple": {
        "markup": "<form rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-name>\n        How do you like your bacon?\n        <small ng-if=\"baconPrep\">({{baconPrep}})</small>\n      </rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <select rx-select\n            id=\"selBaconPrep\"\n            ng-model=\"baconPrep\"\n            ng-required=\"true\">\n            <option value=\"\">I do not like bacon</option>\n            <option value=\"thin\">Thin (light and crispy)</option>\n            <option value=\"medium\">Medium (perfect balance of flavor)</option>\n            <option value=\"thick\">Thick (borderline jerky)</option>\n            <option value=\"crumbled\">Crumbled (great on salads)</option>\n          </select>\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</form>"
    },
    "timePicker.simple": {
        "markup": "<div rx-form ng-controller=\"timePickerSimpleCtrl\">\n  <rx-form-section>\n    <rx-field>\n      <rx-field-name>Empty Value:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-time-picker\n            id=\"emptyPicker\"\n            ng-model=\"emptyValue\">\n          </rx-time-picker>\n        </rx-input>\n        <rx-help-text>Bound Value: {{emptyValue}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n\n    <rx-field>\n      <rx-field-name>Predefined Value:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <rx-time-picker\n            id=\"predefinedPicker\"\n            ng-model=\"predefinedValue\">\n          </rx-time-picker>\n        </rx-input>\n        <rx-help-text>Bound Value: {{predefinedValue}}</rx-help-text>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('timePickerSimpleCtrl', function ($scope) {\n    $scope.emptyValue = '';\n    $scope.predefinedValue = '22:10-10:00';\n});\n"
    },
    "toggleSwitch.async": {
        "markup": "<div ng-controller=\"toggleSwitchAsyncCtrl\">\n  <p>\n    <h4>Successful Operation</h4>\n    <rx-toggle-switch \n      class=\"demo-post-hook\"\n      ng-model=\"toggle3\"\n      post-hook=\"attemptChange(value)\"\n      ng-disabled=\"loading\">\n    </rx-toggle-switch>\n  </p>\n  <p>\n    <h4>Failed Operation</h4>\n    <rx-toggle-switch \n      class=\"demo-failed-async\"\n      ng-model=\"toggle5\"\n      post-hook=\"attemptFailedChange()\"\n      true-value=\"active\"\n      ng-disabled=\"loading5\">\n    </rx-toggle-switch>\n  </p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('toggleSwitchAsyncCtrl', function ($scope, $timeout, rxNotify) {\n    $scope.toggle3 = true;\n    $scope.toggle5 = true;\n\n    $scope.attemptChange = function () {\n        $scope.loading = true;\n        rxNotify.clear('page');\n        rxNotify.add('Saving...', {\n            loading: true\n        });\n\n        // Simulate an API request\n        $timeout(function () {\n            $scope.loading = false;\n            rxNotify.clear('page');\n            rxNotify.add('Change saved', {\n                type: 'success'\n            });\n        }, 1000);\n    };\n\n    $scope.attemptFailedChange = function (value) {\n        $scope.loading5 = true;\n        rxNotify.clear('page');\n        rxNotify.add('Attempting to activate...', {\n            loading: true\n        });\n\n        // Simulate a failed API request\n        $timeout(function () {\n            $scope.loading5 = false;\n            rxNotify.clear('page');\n            rxNotify.add('Asynchronous operation failed', {\n                type: 'error',\n            });\n\n            // Reset toggle switch to original value to simulate failed async operation\n            $scope.toggle5 = !value;\n        }, 1000);\n    };\n});\n"
    },
    "toggleSwitch.custom": {
        "markup": "<p>\n  <rx-toggle-switch \n    class=\"demo-model-values\"\n    ng-model=\"toggle2\"\n    true-value=\"active\"\n    false-value=\"disabled\">\n  </rx-toggle-switch>\n  <span>Model value: {{ toggle2 }}</span>\n</p>\n"
    },
    "toggleSwitch.disabled": {
        "markup": "<p>\n  <rx-toggle-switch \n    class=\"demo-disabled\" \n    ng-model=\"toggle4\" \n    ng-disabled=\"true\">\n  </rx-toggle-switch>\n</p>\n"
    },
    "toggleSwitch.simple": {
        "markup": "<p>\n  <rx-toggle-switch \n    class=\"demo-default-values\" \n    ng-model=\"encoreSuperpowers\">\n  </rx-toggle-switch>\n  <span>Do you have powers? {{ encoreSuperpowers }}</span>\n</p>\n"
    },
    "infopanel.simple": {
        "markup": "<rx-info-panel panel-title=\"A Custom Title\">\n   You can put whatever content you want to inside here\n</rx-info-panel>\n\n"
    },
    "link.colors.create": {
        "markup": "<div class=\"msg-action\">\n  <a href=\"#\"><i class=\"fa fa-fw fa-plus fa-lg\"></i> Create User</a>\n</div>\n"
    },
    "link.colors.destructive": {
        "markup": "<div class=\"msg-warn\">\n  <a href=\"#\"><i class=\"fa fa-fw fa-times fa-lg\"></i> Delete Instance</a>\n</div>\n"
    },
    "link.colors.download": {
        "markup": "<div class=\"msg-info-blue\">\n  <a href=\"#\"><i class=\"fa fa-fw fa-download fa-lg\"></i> Download Spreadsheet</a>\n</div>\n"
    },
    "link.colors.modify": {
        "markup": "<div class=\"msg-info\">\n  <a href=\"#\"><i class=\"fa fa-fw fa-edit fa-lg\"></i> Edit Event</a>\n</div>\n"
    },
    "link.icons.reserved": {
        "markup": "<div class=\"page-actions\">\n  <ul class=\"actions-area\">\n    <h4> Page Action Style (upper-right positioning) </h4>\n    <li class=\"msg-action\">\n      <a href=\"#\"><i class=\"fa fa-fw fa-plus fa-lg\"></i> Add Object</a>\n    </li>\n    <li class=\"msg-warn\">\n      <a href=\"#\"><i class=\"fa fa-fw fa-times fa-lg\"></i> Delete Object</a>\n    </li>\n  </ul>\n</div>\n\n<h4> List of Current Action Links in Encore (with their reserved icons) </h4>\n<div layout=\"row\">\n<ul id=\"all-icons\" flex=\"40\">\n<ul class=\"msg-action\">\n  <li>\n    <a href=\"\"><i class=\"fa fa-fw fa-plus fa-lg\"></i> Create New Instance</a>\n  </li>\n  <li>\n    <a href=\"\"><i class=\"fa fa-fw fa-money fa-lg\"></i> Make a Payment</a>\n  </li>\n  <li>\n    <a href=\"\"><i class=\"fa fa-fw fa-copy fa-lg\"></i> Clone Container</a>\n  </li>\n</ul>\n<ul class=\"msg-info-blue\">\n  <li>\n    <a href=\"\"><i class=\"fa fa-fw fa-download fa-lg\"></i> Download Transactions CSV</a>\n  </li>\n</ul>\n<ul>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-external-link fa-lg\"></i> Go to Reach Server Details</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-edit fa-lg\"></i> Edit Event</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-pencil-square-o fa-lg\"></i> Change Password</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-paperclip fa-lg\"></i> Attach Volume</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-link fa-lg\"></i> Bind Node</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-unlink fa-lg\"></i> Unbind Node</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-share-alt fa-lg\"></i> Enable/Disable Node</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-book fa-lg\"></i> Enable/Disable Logging</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-tachometer fa-lg\"></i> Enable/Disable Connection Throttling</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-stethoscope fa-lg\"></i> Enable/Disable Health Monitoring</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-truck fa-lg\"></i> Migrate Server</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-undo fa-lg\"></i> Reboot Server</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-repeat fa-lg\"></i> Restart Instance</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-wrench fa-lg\"></i> Rebuild Server</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-medkit fa-lg\"></i> Rescue Server</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-arrows-alt fa-lg\"></i> Resize Server/Flavor/Volume</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-mail-reply-all fa-lg\"></i> Revert Resize</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-power-off fa-lg\"></i> Suspend/Unsuspend Server</a>\n  </li>\n  <li class=\"msg-info\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-terminal fa-lg\"></i> Open Console</a>\n  </li>\n  <li class=\"msg-warn\">\n    <a href=\"#\"><i class=\"fa fa-fw fa-times fa-lg\"></i> Delete Server</a>\n  </li>\n</ul>\n</ul>\n</div>\n"
    },
    "link.spinner": {
        "markup": "<ul class=\"msg-action\">\n  <li>\n    <span class=\"link-disabled\">\n      <a href=\"#\"><i class=\"fa fa-fw fa-truck fa-lg\"></i> Migrate Server <span class=\"rx-spinner\"></span></a>\n    </span>\n  </li>\n</ul>\n"
    },
    "typography.lists": {
        "markup": "<div layout=\"row\">\n  <div flex>\n    <ul>\n      <li> Item 1 </li>\n      <li> Item 2 </li>\n      <li> Item 3 </li>\n    </ul>\n  </div>\n  <div flex>\n    <ol class=\"list\">\n      <li> Item 1 </li>\n      <li> Item 2 </li>\n      <li> Item 3 </li>\n    </ol>\n  </div>\n  <div flex>\n    <ul class=\"list\">\n      <li> Item 1 </li>\n      <li> Item 2 </li>\n      <li> Item 3 </li>\n    </ul>\n  </div>\n  <div flex>\n    <div class=\"list bulleted\">\n      <p class=\"item\"> Item 1 </p>\n      <p class=\"item\"> Item 2 </p>\n      <p class=\"item\"> Item 3 </p>\n    </div>\n  </div>\n  <div flex>\n    <div class=\"list decimal\">\n      <p class=\"item\"> Item 1 </p>\n      <p class=\"item\"> Item 2 </p>\n      <p class=\"item\"> Item 3 </p>\n    </div>\n  </div>\n</div>\n"
    },
    "metadata.simple": {
        "markup": "<div ng-controller=\"metadataSimpleExampleCtrl\">\n  <h3>Example</h3>\n  <rx-metadata>\n    <section>\n      <rx-meta label=\"Field Name\">Field Value Example</rx-meta>\n      <rx-meta label=\"Another Field Name\">Another Field Value Example</rx-meta>\n      <rx-meta label=\"Third Field Name\">The Third Field Value Example</rx-meta>\n      <rx-meta label=\"Super Long Value\" class=\"force-word-break\">\n        A super long data value with aseeminglyunbreakablewordthatcouldoverflowtonextcolumn\n      </rx-meta>\n      <rx-meta label=\"Short Field Name\">\n        A long field value given here to show line break style.\n      </rx-meta>\n    </section>\n\n    <section>\n      <rx-meta label=\"Status\" id=\"metaStatus\">Active</rx-meta>\n      <rx-meta label=\"RCN\">RCN-555-555-555</rx-meta>\n      <rx-meta label=\"Type\">Cloud</rx-meta>\n      <rx-meta label=\"Service Level\">Managed &rarr; Managed</rx-meta>\n      <rx-meta label=\"Service Type\">DevOps &rarr; SysOps</rx-meta>\n    </section>\n\n    <section>\n      <rx-meta label=\"Amount\">{{ someAmount | currency }}</rx-meta>\n      <rx-meta label=\"Phone Number Field\">888 - 888 - 8888</rx-meta>\n      <rx-meta label=\"Date Field\">{{ someDate | date:'MMM d, yyyy @ HH:mm (UTCZ)' }}</rx-meta>\n      <rx-meta label=\"Link Field\">\n        <a href=\"#\">Link</a>\n      </rx-meta>\n      <rx-meta label=\"Data and Link Field\">\n        Some data <a href=\"#\">(Link)</a>\n      </rx-meta>\n    </section>\n  </rx-metadata>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('metadataSimpleExampleCtrl', function ($scope) {\n    $scope.someDate = new Date('January 6 1989');\n    $scope.someAmount = 192.68;\n});\n"
    },
    "modals.delete": {
        "markup": "<div>\n  <rx-modal-action class=\"msg-warn\" template-url=\"deleteServer.html\">\n    <i class=\"fa fa-fw fa-times fa-lg\"></i> Delete Server\n  </rx-modal-action>\n</div>\n<script type=\"text/ng-template\" id=\"deleteServer.html\">\n  <rx-modal-form\n    title=\"Delete Server\"\n    subtitle=\"ABC123456\"\n    submit-text=\"Delete Server\"\n    cancel-text=\"Cancel\">\n  \n    <rx-notification type=\"error\">\n      Are you sure you want to delete this server? This action can not be undone.\n    </rx-notification>\n  </rx-modal-form>\n</script>"
    },
    "modals.disabled": {
        "markup": "<p>\n  <rx-modal-action\n    ng-disabled=\"true\"\n    classes=\"button\"\n    template-url=\"disabled.html\"\n    id=\"btnDisabledModal\">\n    Edit Account\n  </rx-modal-action>\n</p>\n<p>\n  <rx-modal-action\n    ng-disabled=\"true\"\n    template-url=\"disabled.html\"\n    id=\"disabledModal\">\n    Edit Account\n  </rx-modal-action>\n</p>\n<script type=\"text/ng-template\" id=\"disabled.html\">\n  <rx-modal-form title=\"Disabled Modal\">\n    <rx-notification type=\"error\">\n      This modal should not be visible.\n    </rx-notification>\n  </rx-modal-form>\n</script>\n"
    },
    "modals.multiView": {
        "markup": "<p>\n  <rx-modal-action\n    classes=\"button\"\n    controller=\"modalMultiViewCtrl\"\n    template-url=\"multiview.html\"\n    disable-esc>\n    Multi-View Example\n  </rx-modal-action>\n</p>\n<script type=\"text/ng-template\" id=\"multiview.html\">\n  <rx-modal-form title=\"State-Changing Modal\"\n    submit-text=\"Send Request\"\n    return-text=\"Finish &amp; Close\">\n    <rx-notifications stack=\"modal\"></rx-notifications>\n    <div ng-switch=\"state\">\n      <div ng-switch-when=\"editing\">\n        <p>Press \"Send Request\" to start the fake process.</p>\n      </div>\n      <div ng-switch-when=\"confirm\">\n        <h3>Are you sure you want to continue?</h3>\n        <p>This action cannot be undone.</p>\n      </div>\n      <p ng-switch-when=\"pending\">Man, this takes forever!</p>\n      <p ng-switch-when=\"complete\">Nothing left to do here.</p>\n    </div>\n  </rx-modal-form>\n  \n  <rx-modal-footer state=\"confirm\">\n    <button class=\"button\" ng-click=\"confirm()\">Yes</button>\n    <button class=\"button cancel\" ng-click=\"setState('editing')\">No</button>\n  </rx-modal-footer>\n</script>\n",
        "javascript": "angular.module('demoApp')\n.controller('modalMultiViewCtrl', function ($scope, $modalInstance, $timeout, rxNotify) {\n    var complete = function () {\n        $scope.loaded = true;\n        $scope.setState('complete');\n        rxNotify.add('Operation Success!', {\n            stack: 'modal',\n            type: 'success'\n        });\n    };\n\n    $scope.submit = function () {\n        $scope.setState('confirm');\n    };\n\n    $scope.confirm = function () {\n        $scope.loaded = false;\n        $scope.setState('pending');\n        rxNotify.add('Performing Operation...', {\n            stack: 'modal',\n            loading: true,\n            dismiss: [$scope, 'loaded']\n        });\n        $timeout(complete, 2000);\n    };\n\n    $scope.cancel = function () {\n        rxNotify.clear('modal');\n\n        /*\n         * You may place custom dismiss logic here,\n         * if you do not wish to use a `dismiss-hook` function.\n         **/\n\n        // This must be called to dismiss the modal.\n        $modalInstance.dismiss();\n    };\n});\n"
    },
    "modals.regular": {
        "markup": "<div ng-controller=\"modalRegularCtrl\">\n  <p>Password: {{password}}</p>\n  <p>\n    <rx-modal-action\n      pre-hook=\"populate(this)\"\n      post-hook=\"changePass(fields)\"\n      dismiss-hook=\"notifyDismissal()\"\n      classes=\"button\"\n      template-url=\"changePassword.html\"\n      id=\"modChangePassword\">\n      Change Password\n    </rx-modal-action>\n  </p>\n  <script type=\"text/ng-template\" id=\"changePassword.html\">\n    <rx-modal-form rx-form\n      title=\"Change {{user}} Admin Password\"\n      submit-text=\"Submit Password\"\n      cancel-text=\"Cancel Request\"\n      subtitle=\"Please read instructions below\">\n      <rx-form-section>\n        <rx-field>\n          <rx-help-text>\n            <h1>Password must:</h1>\n            <ul class=\"list\">\n              <li>have at least one uppercase letter</li>\n              <li>have at least one number</li>\n              <li>be inspirational</li>\n              <li>be in haiku form</li>\n              <li>reference Star Wars</li>\n            </ul>\n          </rx-help-text>\n          <rx-field-name ng-required=\"true\">New Password:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"text\" name=\"password\" ng-model=\"fields.password\" required=\"true\"/>\n            </rx-input>\n            <rx-inline-error class=\"error-message\" ng-show=\"modalActionForm.password.$error.required\">\n              This field is required.\n            </rx-inline-error>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n    </rx-modal-form>\n  </script>\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('modalRegularCtrl', function ($scope, rxNotify) {\n    $scope.password = 'guest';\n\n    $scope.populate = function (modalScope) {\n        modalScope.user = 'hey_dude';\n    };\n\n    $scope.changePass = function (fields) {\n        $scope.password = fields.password;\n        rxNotify.add('Password Updated!', {\n            type: 'success'\n        });\n    };\n\n    $scope.notifyDismissal = function () {\n        rxNotify.add('Password Unchanged', {\n            type: 'info'\n        });\n    };\n});\n"
    },
    "notifications.customStack": {
        "markup": "<div layout=\"row\">\n  <div flex>\n    <h4>Demo Stack (demo-stack)</h4>\n    <rx-notifications stack=\"demo-stack\"></rx-notifications>\n  </div>\n\n  <div flex>\n    <h4>Custom Stack (custom-stack)</h4>\n    <rx-notifications stack=\"custom-stack\"></rx-notifications>\n  </div>\n</div>\n<rx-notification stack=\"demo-stack\" type=\"info\">Hello, world in demo-stack stack!</rx-notification>\n<rx-notification stack=\"custom-stack\" type=\"warning\">Hello, world in custom-stack stack!</rx-notification>\n"
    },
    "notifications.route": {
        "markup": "<div ng-controller=\"notificationsRouteCtrl\">\n  <button class=\"button\" ng-click=\"routeChange()\">Simulate Route Change</button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('notificationsRouteCtrl', function ($rootScope, $scope, rxNotify) {\n\n    $scope.routeChange = function (stack) {\n        $rootScope.$broadcast('$routeChangeStart', {});\n        $rootScope.$broadcast('$routeChangeSuccess', {});\n\n        rxNotify.add('Route Changed', {\n            stack: stack\n        });\n    };\n\n});\n"
    },
    "notifications.simple": {
        "markup": "<rx-notification type=\"error\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n<rx-notification type=\"warning\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n<rx-notification type=\"info\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n<rx-notification type=\"success\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n"
    },
    "notifications.stack": {
        "markup": "<div ng-controller=\"notificationsStackCtrl\">\n  <div layout=\"row\">\n    <div rx-form flex>\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Message Text:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"text\" ng-model=\"message\" />\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Timeout:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"number\" min=\"-1\" ng-model=\"options.timeout\" />\n              <rx-suffix>seconds</rx-suffix>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Type:</rx-field-name>\n          <rx-field-content>\n            <rx-input ng-repeat=\"type in types\">\n              <input rx-radio name=\"notify-type\" id=\"radType_{{$index}}\" ng-model=\"options.type\" value=\"{{type}}\" />\n              <label for=\"radType_{{$index}}\">{{type| rxCapitalize}}</label>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Show:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input rx-radio name=\"notify-show\" id=\"radNotify_immediate\" ng-model=\"options.show\" value=\"immediate\" />\n              <label for=\"radNotify_immediate\">Immediately</label>\n            </rx-input>\n            <rx-input>\n              <input rx-radio name=\"notify-show\" id=\"radNotify_next\" ng-model=\"options.show\" value=\"next\" />\n              <label for=\"radNotify_next\">Next</label>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Options:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input rx-checkbox id=\"chkRepeat\" ng-model=\"options.repeat\" />\n              <label for=\"chkRepeat\">Repeat</label>\n            </rx-input>\n            <rx-input>\n              <input rx-checkbox id=\"chkAlertOnDismiss\" ng-model=\"ondismiss.should\" />\n              <label for=\"chkAlertOnDismiss\">Alert On Dismiss</label>\n            </rx-input>\n            <rx-input>\n              <input rx-checkbox id=\"chkLoading\" ng-model=\"options.loading\" />\n              <label for=\"chkLoading\">Loading? (shows spinner)</label>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <div>\n          <button class=\"button\" ng-click=\"add('demo')\">Add to Demo Stack</button>\n          <button class=\"button\" ng-click=\"add('custom')\">Add to Custom Stack</button>\n        </div>\n      </rx-form-section>\n    </div>\n\n    <div flex layout=\"column\" layout-align=\"top stretch\">\n      <div>\n        <h2>Demo Stack</h2>\n        <rx-notifications stack=\"demo\"></rx-notifications>\n      </div>\n\n      <div>\n        <h2>Custom Stack</h2>\n        <rx-notifications stack=\"custom\"></rx-notifications>\n      </div>\n    </div>\n  </div>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('notificationsStackCtrl', function ($rootScope, $scope, $window, rxNotify) {\n    $scope.message = 'My message';\n\n    $scope.types = [ 'info', 'success', 'warning', 'error' ];\n\n    $scope.options = {\n        type: 'info',\n        timeout: -1,\n        show: 'immediate',\n        repeat: true\n    };\n\n    $scope.ondismiss = {\n        should: false,\n        method: function (msg) {\n            $window.alert('We are dismissing the message: ' + msg.text);\n        }\n    };\n\n    $scope.add = function (stack) {\n        var messageOptions = _.clone($scope.options);\n\n        if ($scope.ondismiss.should) {\n            messageOptions.ondismiss = $scope.ondismiss.method;\n        }\n\n        messageOptions.stack = stack;\n\n        rxNotify.add($scope.message, messageOptions);\n    };\n\n    // add a default messages (to custom stack so they don't show on the main page)\n    rxNotify.add('Helpful Information', {\n        stack: 'demo'\n    });\n    rxNotify.add('Loading', {\n        loading: true,\n        stack: 'demo'\n    });\n    rxNotify.add('You did it!', {\n        type: 'success',\n        stack: 'demo'\n    });\n    rxNotify.add('Careful now...', {\n        type: 'warning',\n        stack: 'demo'\n    });\n    rxNotify.add('Under Attack by Aliens', {\n        type: 'error',\n        stack: 'custom'\n    });\n\n});\n"
    },
    "progressbar.dynamic": {
        "markup": "<div ng-controller=\"progressbarDynamicCtrl\" rx-form>\n  <rx-form-section controlled-width>\n    <rx-field>\n      <rx-field-name>Value:</rx-field-name>\n      <rx-field-content>\n        <rx-input>  \n          <input ng-model=\"value\" type=\"number\">\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n    <rx-field>\n      <rx-field-name>Maximum:</rx-field-name>\n      <rx-field-content>\n        <rx-input>  \n          <input ng-model=\"max\" type=\"number\" max=\"200\">\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n  <rx-form-section>\n    <div>\n      <rx-progressbar value=\"value\" max=\"max\">{{value}}/{{max}}</rx-progressbar>\n    </div>\n  </rx-form-section>\n</div>\n",
        "javascript": "angular.module('demoApp')\n    .controller('progressbarDynamicCtrl', function ($scope) {\n        $scope.value = 22;\n        $scope.max = 100;\n    });\n"
    },
    "progressbar.simple": {
        "markup": "<rx-progressbar value=\"22\">22%</rx-progressbar>\n<rx-progressbar value=\"100\">100%</rx-progressbar>\n<rx-progressbar value=\"2\" max=\"3\"><i>2 of 3 servers processed</i></rx-progressbar>\n<rx-progressbar value=\"3\" max=\"3\"><i>3 of 3 servers processed</i></rx-progressbar>\n"
    },
    "spinner.simple": {
        "markup": "<div ng-controller=\"spinnerSimpleCtrl\">\n  <button rx-toggle=\"loading\" class=\"button\">Toggle Loading</button>\n  <div rx-spinner toggle=\"loading\"></div>\n  Spinning = {{loading}}\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('spinnerSimpleCtrl', function ($scope) {\n    $scope.loading = true;\n});\n"
    },
    "bulkSelect.advanced": {
        "markup": "<div ng-controller=\"bulkSelectAdvancedCtrl\">\n  <table rx-bulk-select\n    bulk-source=\"datacenters\"\n    selected-key=\"rowIsSelected\"\n    class=\"table-striped\"\n    rx-floating-header>\n\n    <thead>\n      <tr>\n        <th colspan=\"3\" class=\"filter-header\">\n          <rx-search-box ng-model=\"filter.keyword\" rx-placeholder=\"'Filter by any...'\"></rx-search-box>\n          <rx-batch-actions>\n            <li class=\"actions-item\">\n              <rx-modal-action\n                template-url=\"shutdownDatacenters.html\"\n                pre-hook=\"this.selectedDatacenters = getSelectedDatacenters()\"\n                controller=\"shutDownDatacentersCtrl\"\n                classes=\"msg-info\">\n                <i class=\"fa fa-fw fa-power-off\"></i> Shutdown Selected Datacenters\n              </rx-modal-action>\n            </li>\n          </rx-batch-actions>\n        </th>\n      </tr>\n      <tr>\n        <th rx-bulk-select-header-check></th>\n        <th>Name</th>\n        <th>City</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat=\"dc in datacenters | filter:filter.keyword\"\n        ng-class=\"{selected: dc.rowIsSelected}\">\n        <td rx-bulk-select-row row=\"dc\"></td>\n        <td>{{ dc.name }}</td>\n        <td>{{ dc.city }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <script type=\"text/ng-template\" id=\"shutdownDatacenters.html\">\n    <rx-modal-form\n      title=\"Shut Down Datacenters\"\n      submit-text=\"Shut Down Datacenters\"\n      class=\"rx-example\">\n\n      <div ng-switch=\"state\">\n        <div ng-switch-when=\"editing\">\n          <rx-notification type=\"warning\">\n            Are you sure you want to shut down these datacenters?\n          </rx-notification>\n        </div>\n        <div ng-switch-when=\"complete\">\n          Batch process complete! <span ng-if=\"errorsPresent\">See table below to make note of any failures.</span>\n        </div>\n        <div ng-switch-when=\"working\">\n          <div>\n            Batch request to shut down datacenters in progress.\n            Please <a href=\"#/components/rxBulkSelect\"\n            target=\"_blank\">open a new tab to continue reading rxBulkSelect\n            documentation.</a>\n          </div>\n          <br />\n          <progressbar\n            class=\"progress-striped\"\n            ng-class=\"{active: numCompleted === selectedDatacenters.length}\"\n            value=\"numCompleted\" max=\"selectedDatacenters.length\">\n            {{ numCompleted }} of {{ selectedDatacenters.length }} processed\n          </progressbar>\n        </div>\n      </div>\n\n      <br />\n\n      <table class=\"table-striped batch-action-modal-table table-demo--batch-action\">\n        <thead>\n          <tr>\n            <th>\n              <rx-sortable-column\n                sort-method=\"sortCol(property)\"\n                sort-property=\"name\"\n                predicate=\"sort.predicate\"\n                reverse=\"sort.reverse\">\n                Name\n              </rx-sortable-column>\n            </th>\n            <th ng-if=\"state === 'editing'\">City</th>\n            <th ng-if=\"state !== 'editing'\">\n              <rx-sortable-column\n                sort-method=\"sortCol(property)\"\n                sort-property=\"status\"\n                predicate=\"sort.predicate\"\n                reverse=\"sort.reverse\">\n                Status\n              </rx-sortable-column>\n            </th>\n            <th class=\"column-action\"></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat=\"dc in selectedDatacenters | orderBy: sort.predicate:sort.reverse | rxPaginate:pager\">\n            <td>{{ dc.name }}</td>\n            <!-- EDITING -->\n            <td ng-if=\"state === 'editing'\">{{ dc.city }}</td>\n            <td class=\"column-action\" ng-if=\"state === 'editing'\">\n              <i class=\"fa fa-times\" ng-click=\"removeDatacenter(dc)\"></i>\n            </td>\n\n            <!-- PROCESSING -->\n            <td class=\"status--{{dc.status}}\" ng-if=\"state !== 'editing'\">\n              <span ng-switch=\"dc.status\">\n                <span ng-switch-when=\"pending\">Shutting down...</span>\n                <span ng-switch-when=\"success\">Successfully shut down!</span>\n                <span ng-switch-when=\"failure\">Failed to shut down.</span>\n                <span ng-switch-default>Queued to shut down...</span>\n              </span>\n            </td>\n            <td class=\"status--{{dc.status}}\" ng-if=\"state !== 'editing'\">\n              <span ng-switch=\"dc.status\">\n                <i ng-switch-when=\"success\" class=\"fa fa-lg fa-check-circle-o\"></i>\n                <i ng-switch-when=\"failure\" class=\"fa fa-lg fa-ban\"></i>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n\n        <tfoot ng-if=\"showPagination\">\n          <tr class=\"paginate-area\">\n            <td colspan=\"3\">\n              <rx-paginate page-tracking=\"pager\"></rx-paginate>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </rx-modal-form>\n    <rx-modal-footer state=\"complete\">\n      <button class=\"button finish\" ng-click=\"cancel()\">Return to Datacenters</button>\n    </rx-modal-footer>\n  </script>\n</div>\n\n",
        "javascript": "angular.module('demoApp')\n.controller('bulkSelectAdvancedCtrl', function ($scope) {\n\n    $scope.datacenters = [\n        { name: 'ORD1', city: 'Chicago' },\n        { name: 'DFW1', city: 'Grapevine' },\n        { name: 'DFW2', city: 'Richardson' },\n        { name: 'IAD2', city: 'Ashburn' },\n        { name: 'IAD3', city: 'Ashburn' },\n        { name: 'LON1', city: 'West Drayton' },\n        { name: 'LON3', city: 'Berkshire' },\n        { name: 'LON5', city: 'Crawley' },\n        { name: 'HKG1', city: 'Hong Kong' },\n        { name: 'SYD2', city: 'Sydney' }\n    ];\n\n    // cloned to avoid interference with first demo table\n    $scope.validateDatacenters = _.cloneDeep($scope.datacenters);\n\n    $scope.filter = { keyword: '' };\n\n    $scope.getSelectedDatacenters = function () {\n        return _.cloneDeep(_.filter($scope.datacenters, { rowIsSelected: true }));\n    };\n\n})\n.controller('shutDownDatacentersCtrl', function ($scope, $modalInstance, $timeout, rxSortUtil, rxPageTracker) {\n    $scope.sort = rxSortUtil.getDefault('name');\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n\n    var itemsPerPage = 8;\n    $scope.pager = rxPageTracker.createInstance({ itemsPerPage: itemsPerPage });\n    $scope.showPagination = itemsPerPage < $scope.selectedDatacenters.length;\n\n    $scope.removeDatacenter = function (dc) {\n        _.remove($scope.selectedDatacenters, dc);\n    };\n\n    $scope.submit = function () {\n        $scope.setState('working');\n\n        $scope.numCompleted = 0;\n\n        var delay = 1000;\n        $scope.selectedDatacenters.forEach(function (dc, i) {\n            $timeout(function () {\n                dc.status = 'pending';\n            }, i * delay);\n            $timeout(function () {\n                dc.status = i % 4 === 0 ? 'failure' : 'success';\n                $scope.numCompleted++;\n            }, ++i * delay);\n        });\n        $timeout(function () {\n            $scope.setState('complete');\n            $scope.errorsPresent = _.some($scope.selectedDatacenters, { status: 'failure' });\n        }, $scope.selectedDatacenters.length * delay);\n    };\n\n    $scope.cancel = $modalInstance.dismiss;\n});\n",
        "less": "@import (less) 'vars';\n\n.table-demo--batch-action {\n  /* ----- COLUMNS ----- */\n  .column-action {\n    width: 38px;\n  }\n\n  /* ----- STATUSES ----- */\n  .status--pending {\n    color: @orange-700;\n  }\n\n  .status--success {\n    color: @green-700;\n  }\n\n  .status--failure {\n    color: @red-500;\n  }\n}\n"
    },
    "bulkSelect.validate": {
        "markup": "<div ng-controller=\"bulkSelectValidateCtrl\">\n  <rx-modal-action\n    classes=\"button\"\n    template-url=\"selectDatacenters.html\"\n    id=\"selectDatacenters\">\n    Select Datacenters\n  </rx-modal-action>\n  <script \n    type=\"text/ng-template\" \n    id=\"selectDatacenters.html\">\n    <rx-modal-form title=\"Datacenters\">\n      <table \n        rx-bulk-select \n        rx-bulk-select-validate \n        bulk-source=\"validateDatacenters\" \n        selected-key=\"rowIsSelected\" \n        class=\"table-striped\">\n        <thead>\n          <tr>\n            <th rx-bulk-select-header-check></th>\n            <th>Name</th>\n            <th>City</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat=\"dc in validateDatacenters | filter:filter.keyword\"\n            ng-class=\"{selected: dc.rowIsSelected}\">\n            <td rx-bulk-select-row row=\"dc\"></td>\n            <td>{{ dc.name }}</td>\n            <td>{{ dc.city }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </rx-modal-form>\n  </script>\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('bulkSelectValidateCtrl', function ($scope) {\n\n    $scope.datacenters = [\n        { name: 'ORD1', city: 'Chicago' },\n        { name: 'DFW1', city: 'Grapevine' },\n        { name: 'DFW2', city: 'Richardson' },\n        { name: 'IAD2', city: 'Ashburn' },\n        { name: 'IAD3', city: 'Ashburn' },\n        { name: 'LON1', city: 'West Drayton' },\n        { name: 'LON3', city: 'Berkshire' },\n        { name: 'LON5', city: 'Crawley' },\n        { name: 'HKG1', city: 'Honk Kong' },\n        { name: 'SYD2', city: 'Sydney' }\n    ];\n\n    // cloned to avoid interference with first demo table\n    $scope.validateDatacenters = _.cloneDeep($scope.datacenters);\n\n    $scope.filter = { keyword: '' };\n\n    $scope.getSelectedDatacenters = function () {\n        return _.cloneDeep(_.where($scope.datacenters, { rowIsSelected: true }));\n    };\n\n})\n.controller('shutDownDatacentersCtrl', function ($scope, $modalInstance, $timeout, rxSortUtil, rxPageTracker) {\n    $scope.sort = rxSortUtil.getDefault('name');\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n\n    var itemsPerPage = 8;\n    $scope.pager = rxPageTracker.createInstance({ itemsPerPage: itemsPerPage });\n    $scope.showPagination = itemsPerPage < $scope.selectedDatacenters.length;\n\n    $scope.removeDatacenter = function (dc) {\n        _.remove($scope.selectedDatacenters, dc);\n    };\n\n    $scope.submit = function () {\n        $scope.setState('working');\n\n        $scope.numCompleted = 0;\n\n        var delay = 1000;\n        $scope.selectedDatacenters.forEach(function (dc, i) {\n            $timeout(function () {\n                dc.status = 'pending';\n            }, i * delay);\n            $timeout(function () {\n                dc.status = i % 4 === 0 ? 'failure' : 'success';\n                $scope.numCompleted++;\n            }, ++i * delay);\n        });\n        $timeout(function () {\n            $scope.setState('complete');\n            $scope.errorsPresent = _.some($scope.selectedDatacenters, { status: 'failure' });\n        }, $scope.selectedDatacenters.length * delay);\n    };\n\n    $scope.cancel = $modalInstance.dismiss;\n});\n"
    },
    "selectFilter.simple": {
        "markup": "<div ng-controller=\"selectFilterSimpleCtrl\">\n  <h3>Filtered Table</h3>\n  <table class=\"table-striped\">\n    <thead>\n      <th colspan=\"3\" class=\"filter-header\">\n        <form rx-form>\n          <rx-form-section controlled-width>\n            <rx-select-filter filter=\"filter\"></rx-select-filter>\n          </rx-form-section>\n        </form>\n      </th>\n      <tr>\n        <th>Account</th>\n        <th>Status</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat=\"ticket in (filteredTickets = (tickets | rxApply:filter))\">\n        <td>{{ticket.account}}</td>\n        <td>{{ticket.status}}</td>\n        <td>{{ticket.description}}</td>\n      </tr>\n      <tr ng-if=\"filteredTickets.length === 0\">\n        <td colspan=\"6\">\n          <div ng-if=\"tickets.length === 0\">No tickets were found.</div>\n          <div ng-if=\"tickets.length !== 0\">No results match those criteria.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('selectFilterSimpleCtrl', function ($scope, rxSelectFilter) {\n    $scope.filter = rxSelectFilter.create({\n        properties: ['account', 'status'],\n        selected: {\n            account: ['A']\n        }\n    });\n\n    $scope.tickets = [\n        { account: 'A', status: 'NEW', description: 'A new ticket' },\n        { account: 'A', status: 'IN_PROGRESS', description: 'Fix all the bugs' },\n        { account: 'B', status: 'TRANSFERRED', description: 'Don\\'t stop believing' },\n        { account: 'B', status: 'VENDOR', description: 'Hold on to that feeling' },\n        { account: 'A', status: 'TRANSFERRED', description: 'qwertyuiop' }\n    ];\n});\n"
    },
    "sortableColumn.simple": {
        "markup": "<table\n  rx-floating-header\n  id=\"sortable-column-testing-table\"\n  ng-controller=\"sortableColumnSimpleCtrl\"\n  class=\"table-striped sortable-column-table\">\n\n  <thead>\n    <tr>\n      <th scope=\"col\">\n        <rx-sortable-column\n          sort-method=\"sortCol(property)\"\n          sort-property=\"name\"\n          predicate=\"sort.predicate\"\n          reverse=\"sort.reverse\">\n          Name\n        </rx-sortable-column>\n      </th>\n      <th scope=\"col\">\n        <rx-sortable-column\n          sort-method=\"sortCol(property)\"\n          sort-property=\"jobTitle\"\n          predicate=\"sort.predicate\"\n          reverse=\"sort.reverse\">\n          Occupation\n        </rx-sortable-column>\n      </th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr ng-repeat=\"resource in talentPool | rxSortEmptyTop:sort.predicate:sort.reverse\">\n      <th scope=\"row\">{{resource.name}}</th>\n      <td>{{resource.jobTitle}}</td>\n    </tr>\n  </tbody>\n</table>\n",
        "javascript": "angular.module('demoApp')\n.controller('sortableColumnSimpleCtrl', function ($scope, rxSortUtil) {\n    $scope.sort = rxSortUtil.getDefault('name', false);\n\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n\n    $scope.talentPool = [\n        {\n            name: 'Andrew Yurisich',\n            jobTitle: 'Mailroom Associate IV'\n        },\n        {\n            name: 'Patrick Deuley',\n            jobTitle: 'Design Chaplain'\n        },\n        {\n            name: null,\n            jobTitle: 'Chief Mastermind'\n        },\n        {\n            jobTitle: 'Assistant Chief Mastermind'\n        },\n        {\n            name: 'Hussam Dawood',\n            jobTitle: 'Evangelist of Roger Enriquez'\n        },\n        {\n            name: 'Kerry Bowley',\n            jobTitle: 'Dev Mom'\n        },\n    ];\n});\n"
    },
    "table.actionMenu": {
        "markup": "<table class=\"table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n      <th class=\"actions\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Patrick Deuley</td>\n      <td>Design Chaplain</td>\n      <td><rx-action-menu></rx-action-menu></td>\n    </tr>\n    <tr>\n      <td>Hussam Dawood</td>\n      <td>Evangelist of Roger Enriquez</td>\n      <td><rx-action-menu></rx-action-menu></td>\n    </tr>\n\n  </tbody>\n</table>\n"
    },
    "table.apiPagination": {
        "markup": "<div ng-controller=\"tableApiPaginationCtrl\">\n  <button ng-click=\"pagedServers.refresh()\" class=\"button sm\">Refresh</button>\n\n  <table\n    rx-floating-header\n    rx-loading-overlay\n    class=\"table-striped table-demo--api-pagination\">\n\n    <thead>\n      <tr>\n        <th colspan=\"2\" class=\"filter-header\">\n          <form rx-form>\n            <rx-form-section controlled-width>\n              <rx-field>\n                <rx-field-name> Filter Data </rx-field-name>\n                <rx-field-content>\n                  <rx-input>\n                    <rx-search-box\n                      rx-placeholder=\"'Filter by any...'\"\n                      ng-model=\"data.searchText\">\n                    </rx-search-box>\n                  </rx-input>\n                </rx-field-content>\n              </rx-field>\n              <rx-select-filter filter=\"osFilter\"></rx-select-filter>\n            </rx-form-section>\n          </form>\n        </th>\n      </tr>\n      <tr>\n        <th>\n          <rx-sortable-column\n            sort-method=\"sortCol(property)\"\n            sort-property=\"name\"\n            predicate=\"sort.predicate\"\n            reverse=\"sort.reverse\">\n            Name\n          </rx-sortable-column>\n        </th>\n        <th>\n          <rx-sortable-column\n            sort-method=\"sortCol(property)\"\n            sort-property=\"os\"\n            predicate=\"sort.predicate\"\n            reverse=\"sort.reverse\">\n            OS\n          </rx-sortable-column>\n        </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat=\"server in pagedServers.items\">\n        <td>{{server.name}}</td>\n        <td>{{server.os}}</td>\n      </tr>\n    </tbody>\n\n    <tfoot>\n      <tr class=\"paginate-area\">\n        <td colspan=\"2\">\n          <rx-paginate\n            page-tracking=\"pagedServers\"\n            server-interface=\"serverInterface\"\n            error-message=\"Error loading page!\"\n            filter-text=\"data.searchText\"\n            selections=\"osFilter.selected\"\n            sort-column=\"sort.predicate\"\n            sort-direction=\"sort.reverse\">\n          </rx-paginate>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableApiPaginationCtrl', function ($scope, $q, $timeout, $filter, rxPageTracker,\n                rxSortUtil, rxSelectFilter) {\n\n    var os = ['Ubuntu 12.04', 'Red Hat Enterprise Linux 6.4', 'CentOS 6.4', 'Ubuntu 13.04'];\n    var makeServers = function (serverCount) {\n        var servers = [];\n        for (var i = 1; i < serverCount + 1; i++) {\n            var server = {\n                id: i,\n                name: 'Server ' + i,\n                os: os[i % os.length]\n            };\n            servers.push(server);\n        }\n        return servers;\n    };\n\n    var allLazyServers = makeServers(701);\n\n    var serverInterface = {\n        getItems: function (pageNumber, itemsPerPage, params) {\n            var deferred = $q.defer();\n            var filterText = params.filterText;\n            var sortColumn = params.sortColumn;\n            var sortDirection = params.sortDirection;\n\n            if (sortColumn === 'name') {\n                sortColumn = 'id';\n            }\n\n            if (sortDirection === 'DESCENDING') {\n                sortColumn = '-' + sortColumn;\n            }\n\n            $timeout(function () {\n                var first = pageNumber * itemsPerPage;\n                var added = first + itemsPerPage;\n                var last = (added > allLazyServers.length) ? allLazyServers.length : added;\n\n                var filteredServers = $filter('filter')(allLazyServers, filterText);\n                filteredServers = $scope.osFilter.applyTo(filteredServers);\n                filteredServers = $filter('orderBy')(filteredServers, sortColumn);\n\n                // Return 100 items more than the user's `itemsPerPage`. i.e. if the\n                // user is asking for 25 items per page, return 125 in total\n                var lazyServers = filteredServers.slice(first, last + 100);\n\n                var response = {\n                    items: lazyServers,\n                    pageNumber: pageNumber,\n                    totalNumberOfItems: filteredServers.length\n                };\n\n                if (filterText === 'error') {\n                    deferred.reject();\n                } else {\n                    deferred.resolve(response);\n                }\n            }, 300);\n            return deferred.promise;\n        }\n    };\n\n    $scope.sort = rxSortUtil.getDefault('name', false);\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n    $scope.data = { searchText: '' };\n    $scope.clearFilter = function () {\n        $scope.data.searchText = '';\n    };\n    $scope.osFilter = rxSelectFilter.create({\n        properties: ['os'],\n        available: {\n            os: os\n        }\n    });\n    $scope.serverInterface = serverInterface;\n    $scope.pagedServers = rxPageTracker.createInstance({ itemsPerPage: 25 });\n});\n"
    },
    "table.basic": {
        "markup": "<table class=\"table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Patrick Deuley</td>\n      <td>Design Chaplain</td>\n    </tr>\n    <tr>\n      <td>Hussam Dawood</td>\n      <td>Evangelist of Roger Enriquez</td>\n    </tr>\n  </tbody>\n</table>\n"
    },
    "table.delete": {
        "markup": "<table class=\"table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n      <th class=\"actions\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Patrick Deuley</td>\n      <td>Design Chaplain</td>\n      <td><i class=\"fa fa-times delete-x\"></i></td>\n    </tr>\n  </tbody>\n</table>\n"
    },
    "table.filtering": {
        "markup": "<table class=\"table-striped\" ng-controller=\"tableFilteringExampleCtrl\">\n  <thead>\n    <tr><!-- Filter Row -->\n      <td colspan=\"2\">\n        <rx-search-box\n          rx-placeholder=\"'Filter by any...'\"\n          ng-model=\"searchText\">\n        </rx-search-box>\n      </td>\n    </tr>\n    <tr><!-- Column Headings -->\n      <th>Name</th>\n      <th>Occupation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat=\"person in people | filter:searchText\">\n      <td>{{ person.name }}</td>\n      <td>{{ person.occupation }}</td>\n    </tr>\n  </tbody>\n</table>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableFilteringExampleCtrl', function ($scope) {\n    $scope.people = [\n        { name: 'Patrick Deuley', occupation: 'Design Chaplain' },\n        { name: 'Hussam Dawood', occupation: 'Cat Lover' },\n        { name: 'Kevin Lamping', occupation: 'Framework Father' },\n        { name: 'Glynnis Ritchie', occupation: 'Serif Sheriff' },\n        { name: 'Freddy Knuth', occupation: 'Venezuelan Hurricane' },\n        { name: 'Chris Cantu', occupation: 'Texan Tornado' },\n    ];\n});\n"
    },
    "table.filteringCollapsible": {
        "markup": "<div ng-controller=\"tableFilteringCollapsibleExampleCtrl\">\n  <rx-collapse title=\"Filter results\">\n    <form rx-form class=\"collapsible-filter-example-form\">\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Region </rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <select rx-select ng-model=\"filter.region\">\n                <option value=\"\">Any</option>\n                <option value=\"{{region.name}}\" ng-repeat=\"region in regions\">{{region.city}}</option>\n              </select>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n    </form>\n  </rx-collapse>\n\n  <table class=\"table-striped\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>RAM</th>\n        <th>vCPUs</th>\n        <th>System Disk</th>\n        <th>Region</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat=\"server in servers | filter:filter.region\">\n        <td>{{server.name}}</td>\n        <td>{{server.ram}}</td>\n        <td>{{server.cpu}}</td>\n        <td>{{server.disk}}</td>\n        <td>{{server.region}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableFilteringCollapsibleExampleCtrl', function ($scope) {\n    $scope.filter = { region: '' };\n\n    $scope.regions = [\n        { name: 'DFW', city: 'Dallas-Fort Worth' }, { name: 'ORD', city: 'Chicago' },\n        { name: 'IAD', city: 'Northern Virginia' }, { name: 'LON', city: 'London' },\n        { name: 'HKG', city: 'Hong Kong' }, { name: 'SYD', city: 'Sydney' }\n    ];\n\n    $scope.servers = [\n        { name: 'General1-1', ram: '1 GB', cpu: 1, disk: '20GB SSD', region: 'DFW' },\n        { name: 'General1-2', ram: '2 GB', cpu: 2, disk: '40GB SSD', region: 'ORD' },\n        { name: 'General1-4', ram: '4 GB', cpu: 4, disk: '80GB SSD', region: 'IAD' },\n        { name: 'General1-8', ram: '8 GB', cpu: 8, disk: '160GB SSD', region: 'LON' },\n        { name: 'I/O1-15', ram: '15 GB', cpu: 4, disk: '40GB SSD', region: 'HKG' },\n        { name: 'I/O1-30', ram: '30 GB', cpu: 8, disk: '40GB SSD', region: 'SYD' }\n    ];\n});\n",
        "less": ".collapsible-filter-example-form {\n  width: 400px;\n}\n"
    },
    "table.floatingHeader": {
        "markup": "<div ng-controller=\"tableFloatingHeaderCtrl\">\n  <table rx-floating-header class=\"e2e-filter\">\n    <thead>\n      <tr>\n        <th colspan=\"2\">\n          <rx-search-box\n            ng-model=\"searchText\"\n            rx-placeholder=\"'Filter by any...'\"></rx-search-box>\n        </th>\n      </tr>\n      <tr>\n        <th>Column One Header</th>\n        <th>Column Two Header</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat=\"datum in data | filter:searchText\"\n        class=\"row_{{datum.value}}\"\n        ng-class=\"{'first-row': $index===0, 'middle-row': $index===11, 'last-row': $index===21}\">\n        <td>{{datum.name}}</td>\n        <td>{{datum.value}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableFloatingHeaderCtrl', function ($scope) {\n    $scope.data = [\n        { name: 'First', value: 1 },\n        { name: 'A', value: 2 },\n        { name: 'B', value: 3 },\n        { name: 'C', value: 4 },\n        { name: 'D', value: 5 },\n        { name: 'E', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'Middle', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'G', value: 2 },\n        { name: 'H', value: 3 },\n        { name: 'I', value: 4 },\n        { name: 'J', value: 5 },\n        { name: 'K', value: 1 },\n        { name: 'Last', value: 2 }\n    ];\n});\n"
    },
    "table.nestedMetadata": {
        "markup": "<table class=\"table-striped\" ng-controller=\"tableNestedMetadataExampleCtrl\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody ng-repeat=\"person in people\">\n    <tr>\n      <td>{{ person.name }}</td>\n      <td>{{ person.occupation }}</td>\n      <td class=\"double-chevron-cell\" ng-class=\"{ expanded: person.expanded }\">\n        <a class=\"double-chevron\" ng-click=\"person.expanded = !person.expanded\"></a>\n      </td>\n    </tr>\n    <tr ng-if=\"person.expanded\">\n      <td colspan=\"3\" class=\"expanded-container\">\n        <div class=\"expanded-content\">\n          <rx-metadata>\n            <section ng-repeat=\"(attr, val) in person.pet\">\n              <rx-meta label=\"{{ attr | rxCapitalize}}\">{{val}}</rx-meta>\n            </section>\n          </rx-metadata>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableNestedMetadataExampleCtrl', function ($scope) {\n    $scope.people = [\n        {\n            name: 'Patrick Deuley',\n            occupation: 'Design Chaplain',\n            pet: {\n                name: 'Shelly',\n                animal: 'Turtle',\n                age: 1\n            }\n        },\n        {\n            name: 'Hussam Dawood',\n            occupation: 'Cat Lover',\n            pet: {\n                name: 'Sassy',\n                animal: 'Cat',\n                age: 6\n            }\n        }\n    ];\n});\n"
    },
    "table.nestedTable": {
        "markup": "<table class=\"table-striped\" ng-controller=\"tableNestedTableExampleCtrl\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody ng-repeat=\"person in people\">\n    <tr>\n      <td>{{ person.name }}</td>\n      <td>{{ person.occupation }}</td>\n      <td class=\"double-chevron-cell\" ng-class=\"{ expanded: person.expanded }\">\n        <a class=\"double-chevron\" ng-click=\"person.expanded = !person.expanded\"></a>\n      </td>\n    </tr>\n    <tr ng-if=\"person.expanded\">\n      <td colspan=\"3\" class=\"expanded-container\">\n        <table class=\"subtable\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Animal</th>\n              <th>Age</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat=\"pet in person.pets\">\n              <td>{{ pet.name }}</td>\n              <td>{{ pet.animal }}</td>\n              <td>{{ pet.age }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableNestedTableExampleCtrl', function ($scope) {\n    $scope.people = [\n        {\n            name: 'Patrick Deuley',\n            occupation: 'Design Chaplain',\n            pets: [\n                {\n                    name: 'Shelly',\n                    animal: 'Turtle',\n                    age: 1\n                },\n                {\n                    name: 'Spike',\n                    animal: 'Porcupine',\n                    age: 10\n                }\n            ]\n        },\n        {\n            name: 'Hussam Dawood',\n            occupation: 'Cat Lover',\n            pets: [\n                {\n                    name: 'Sassy',\n                    animal: 'Cat',\n                    age: 6\n                }\n            ]\n        }\n    ];\n});\n"
    },
    "table.singleAction": {
        "markup": "<table class=\"table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n      <th>Resume</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Patrick Deuley</td>\n      <td>Design Chaplain</td>\n      <td>\n        <span tooltip=\"No resume has been uploaded.\">\n          <button class=\"btn-link\" disabled>\n            <span><i class=\"fa fa-download\"></i> Download</span>\n          </button>\n        </span>\n      </td>\n    </tr>\n    <tr>\n      <td>Hussam Dawood</td>\n      <td>Evangelist of Roger Enriquez</td>\n      <td>\n        <button class=\"btn-link\"><i class=\"fa fa-download\"></i> Download</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
    },
    "table.statusColumn": {
        "markup": "<table \n  ng-controller=\"tableStatusColumnCtrl\"\n  class=\"table-striped demo-status-column-table\">\n  <thead>\n    <tr>\n      <th rx-status-header>\n        <rx-sortable-column\n          sort-method=\"sortCol(property)\"\n          sort-property=\"status\"\n          predicate=\"sort.predicate\"\n          reverse=\"sort.reverse\">\n          Status\n        </rx-sortable-column>\n      </th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat=\"server in servers | orderBy: sort.predicate:sort.reverse\">\n      <!-- Both `api` and `tooltip-content` are optional -->\n      <td rx-status-column\n        status=\"{{ server.status }}\"\n        api=\"{{ server.api }}\"\n        tooltip-content=\"{{ server.status }}\">\n      </td>\n      <td>{{ server.title }}</td>\n    </tr>\n  </tbody>\n</table>\n\n",
        "javascript": "angular.module('demoApp')\n.controller('tableStatusColumnCtrl', function ($scope, rxStatusMappings, rxSortUtil) {\n    $scope.servers = [\n        { status: 'ACTIVE', title: 'ACTIVE status' },\n        { status: 'ERROR', title: 'ERROR status' },\n        { status: 'DISABLED', title: 'DISABLED status' },\n        { status: 'DELETED', title: 'DELETED status mapped to ERROR' },\n        { status: 'UNKNOWN', title: 'UNKNOWN status mapped to ERROR' },\n        { status: 'RESCUE', title: 'RESCUE status mapped to INFO' },\n        { status: 'SUSPENDED', title: 'SUSPENDED status mapped to WARNING' },\n        { status: 'REBUILD', title: 'REBUILD status mapped to PENDING' },\n        { status: 'RESIZE', title: 'RESIZE status mapped to PENDING' },\n        { status: 'MIGRATING', title: 'MIGRATING status mapped to PENDING' },\n        { status: 'DELETING', title: 'DELETING status mapped to PENDING, using `fooApi` mapping', api: 'fooApi' }\n    ];\n\n    // We have a few different ways of adding mappings. We've tried to show them all here\n    rxStatusMappings.addGlobal({\n        'DELETING': 'PENDING'\n    });\n    rxStatusMappings.mapToInfo('RESCUE');\n    rxStatusMappings.mapToWarning('SUSPENDED');\n    rxStatusMappings.mapToPending(['REBUILD','RESIZE','MIGRATING']);\n    rxStatusMappings.mapToError(['DELETED', 'UNKNOWN']);\n    rxStatusMappings.addAPI('fooApi', { 'DELETING': 'PENDING' });\n    rxStatusMappings.mapToPending('SomeApiSpecificStatus', 'fooApi');\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n    $scope.sort = rxSortUtil.getDefault('status');\n});\n"
    },
    "table.uiPagination": {
        "markup": "<div ng-controller=\"tableUiPaginationCtrl\">\n  <table class=\"table-striped table-demo--ui-pagination\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>OS</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat=\"server in servers | orderBy: sorter.predicate:sorter.reverse | rxPaginate:pager \">\n        <td>{{server.name}}</td>\n        <td>{{server.os}}</td>\n      </tr>\n    </tbody>\n\n    <tfoot>\n      <tr class=\"paginate-area\">\n        <td colspan=\"2\">\n          <rx-paginate page-tracking=\"pager\"></rx-paginate>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n\n  <p>\n    Use these buttons to adjust the number of pages displayed. The pagination will hide when there is only one page\n    available.\n  </p>\n  <p>\n    <button ng-click=\"removeServers()\" class=\"button sm negative\">Remove first 2 servers</button>\n    <button ng-click=\"addServers()\" class=\"button sm positive\">Add 2 servers</button>\n  </p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('tableUiPaginationCtrl', function ($scope, rxPageTracker) {\n    $scope.pager = rxPageTracker.createInstance({ itemsPerPage: 3 });\n\n    var os = ['Ubuntu 12.04', 'Red Hat Enterprise Linux 6.4', 'CentOS 6.4', 'Ubuntu 13.04'];\n    var makeServers = function (serverCount) {\n        var servers = [];\n        for (var i = 1; i < serverCount + 1; i++) {\n            var server = {\n                id: i,\n                name: 'Server ' + i,\n                os: os[i % os.length]\n            };\n            servers.push(server);\n        }\n        return servers;\n    };\n\n    $scope.servers = makeServers(21);\n\n    $scope.removeServers = function () {\n        if ($scope.servers.length > 2) {\n            $scope.servers = $scope.servers.splice(2);\n        }\n    };\n\n    $scope.addServers = function () {\n        $scope.servers = $scope.servers.concat(makeServers(2));\n    };\n});\n"
    },
    "table.zeroData": {
        "markup": "<table class=\"table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Occupation</th>\n      <th class=\"actions\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td colspan=\"3\">No names were found.</td>\n    </tr>\n\n  </tbody>\n</table>\n"
    },
    "tabs.simple": {
        "markup": "<tabset id=\"tabs\">\n  <tab heading=\"Bacon Ipsum\">\n    <p>\n      Bacon ipsum dolor sit amet salami jowl corned beef, andouille flank tongue\n      ball tip kielbasa pastrami tri-tip meatloaf short loin beef biltong. Cow\n      bresaola ground round strip steak fatback meatball shoulder leberkas\n      pastrami sausage corned beef t-bone pork belly drumstick.\n    </p>\n  </tab>\n  <tab heading=\"Veggie Ipsum\">\n    <p>\n      Veggies sunt bona vobis, proinde vos postulo esse magis grape pea sprouts\n      horseradish courgette maize spinach prairie turnip jícama coriander\n      quandong gourd broccoli seakale gumbo. Parsley corn lentil zucchini\n      radicchio maize burdock avocado sea lettuce. Garbanzo tigernut earthnut\n      pea fennel.\n    </p>\n  </tab>\n  <tab>\n    <tab-heading>Cat Ipsum <span class=\"subdued\">(meow)</span></tab-heading>\n    <p>\n      Cat ipsum dolor sit amet, hunt anything that moves or hopped up on\n      goofballs hide when guests come over. Hide when guests come over intrigued\n      by the shower, or stare at ceiling climb leg for stretch and use lap as\n      chair. Hunt anything that moves flop over, leave dead animals as gifts for\n      chase imaginary bugs, chase mice for stare at ceiling yet hopped up on\n      goofballs.\n    </p>\n  </tab>\n  <tab>\n    <tab-heading>Tupac Ipsum</tab-heading>\n    <p>\n      I give a holla to my sisters on welfare 2Pac cares, if don't nobody else\n      care And, I know they like to beat you down a lot When you come around the\n      block, brothers clown a lot But please don't cry, dry your eyes, never let\n      up Forgive but don't forget, girl, keep your head up And when he tells you\n      you ain't nothin', don't believe him And if he can't learn to love you,\n      you should leave him Cause sister, you don't need him And I ain't tryin'\n      to gas ya up, I just call 'em how I see 'em\n    </p>\n  </tab>\n</tabset>\n"
    },
    "tags.simple": {
        "markup": "<div ng-controller=\"tagsSimpleExampleCtrl\">\n  <h4>Standard:</h4>\n  <rx-tags\n    id=\"standard-tags\"\n    ng-model=\"tags\"\n    options=\"tagOptions\"\n    key=\"text\"></rx-tags>\n\n  <h4>Disabled:</h4>\n  <rx-tags\n    id=\"disabled-tags\"\n    ng-model=\"tagOptions\"\n    disabled></rx-tags>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('tagsSimpleExampleCtrl', function ($scope) {\n    $scope.tagOptions = [\n        { text: 'apple', category: 'fruit' },\n        { text: 'orange', category: 'fruit' },\n        { text: 'banana', category: 'fruit' },\n        { text: 'squash', category: 'vegetable' }\n    ];\n    $scope.tags = ['apple'];\n});\n"
    },
    "tooltips.simple": {
        "markup": "<div ng-controller=\"tooltipsSimpleExampleCtrl\">\n  <h3>Tooltip Placement</h3>\n  <rx-button tooltip=\"Left tooltip\" tooltip-placement=\"left\" default-msg=\"Left tooltip\"></rx-button>\n  &nbsp;\n  <rx-button tooltip=\"Right tooltip\" tooltip-placement=\"right\" default-msg=\"Right tooltip\"></rx-button>\n  &nbsp;\n  <rx-button tooltip=\"A top tooltip\" tooltip-placement=\"top\" default-msg=\"Top tooltip\"></rx-button>\n  &nbsp;\n  <rx-button tooltip=\"A bottom tooltip\" tooltip-placement=\"bottom\" default-msg=\"Bottom tooltip\"></rx-button>\n\n  <h3>Simple Tooltip Defined in the Controller</h3>\n  <rx-button tooltip=\"{{dynamicTooltip}}\" default-msg=\"Hover to see text coming from the controller.\"></rx-button>\n\n  <h3>HTML Tooltip</h3>\n  <span tooltip-html=\"htmlTooltip\"><span>Hover over this text to see HTML in a tooltip</span>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('tooltipsSimpleExampleCtrl', function ($scope) {\n    $scope.dynamicTooltip = 'I was defined in the controller!';\n    $scope.htmlTooltip = '<span class=\"tooltip-header\">A Tooltip Title</span><p>You can use HTML</p>';\n});\n"
    },
    "typeahead.showOnFocus": {
        "markup": "<div ng-controller=\"typeadheadShowOnFocusCtrl\" rx-form>\n  <rx-form-section stacked>\n    <rx-field>\n      <rx-field-name>States:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\"\n            id=\"typeahead\"\n            ng-model=\"selected2\"\n            typeahead=\"state for state in states | filter:$viewValue:allowEmpty\" />\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('typeadheadShowOnFocusCtrl', function ($scope) {\n    $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut',\n        'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas',\n        'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n        'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n        'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Republic of Dawood',\n        'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia',\n        'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n});\n"
    },
    "typeahead.simple": {
        "markup": "<div ng-controller=\"typeaheadSimpleCtrl\" rx-form>\n  <rx-form-section stacked>\n    <rx-field>\n      <rx-field-name>States:</rx-field-name>\n      <rx-field-content>\n        <rx-input>\n          <input type=\"text\"\n            ng-model=\"selected1\"\n            typeahead=\"state for state in states | filter:$viewValue | limitTo:8\" />\n        </rx-input>\n      </rx-field-content>\n    </rx-field>\n  </rx-form-section>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('typeaheadSimpleCtrl', function ($scope) {\n    $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut',\n        'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas',\n        'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n        'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n        'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Republic of Dawood',\n        'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia',\n        'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n});\n"
    },
    "wells.modal": {
        "markup": "<rx-modal-action classes=\"button\" template-url=\"modal-well.html\">Open a modal</rx-modal-action>\n\n<script type=\"text/ng-template\" id=\"modal-well.html\">\n  <rx-modal-form title=\"Change Connection Throttling\" rx-form>\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name>Max Connections:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"number\"\n              ng-model=\"fields.maxConnections\"\n              ng-init=\"fields.maxConnections = 1\" />\n          </rx-input>\n          <rx-help-text>Simultaneous connections</rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n    <rx-form-section>\n      <div class=\"modal-well\">\n        <h2>Summary</h2>\n        <p>Allow a maximum of {{ fields.maxConnections }} simultaneous connections from a single IP.</p>\n      </div>\n    </rx-form-section>\n  </rx-modal-form>\n</script>\n"
    },
    "wells.permissions": {
        "markup": "<div class=\"well centered\">\n   <h2>You need permissions or this data isn't here yet.</h2>\n   <ul class=\"list\">\n      <li>Here's a reason why you can't see it.</li>\n      <li>Here's a tip about what you can do to add data by clicking the button below.</li>\n   </ul>\n   <p><button class=\"button\">Add Data</button></p>\n</div>\n"
    },
    "helperClasses.simple": {
        "markup": "<h1>My Items <span class=\"subdued\">(10)</span></h1>\n<h1><a href=\"#\">My Items <span class=\"subdued\">(10)</span></a></h1>\n\n<h2>No Clearfix</h2>\n<div style=\"background: #ddd; padding: 1em;\">\n  <div style=\"float: left; background: #eee; padding: 1em;\">Floated Content</div>\n</div>\n\n<h2 class=\"clear\">With Clearfix</h2>\n<div class=\"clearfix\"\n  style=\"background: #ddd; padding: 1em;\">\n  <div style=\"float: left; background: #eee; padding: 1em;\">Floated Content</div>\n</div>\n\n<div class=\"clearfix\">\n  <div style=\"float: left;\">Content floated left</div>\n  <div class=\"clear-right\">Content cleared right (wrong side)</div>\n  <div class=\"clear-left\">Content cleared left (correct side)</div>\n\n  <hr>\n\n  <div style=\"float: right;\">Content floated right</div>\n  <div class=\"clear-left\">Content cleared left (wrong side)</div>\n  <div class=\"clear-right\">Content cleared right (correct side)</div>\n\n  <hr>\n\n  <div style=\"float: right;\">Content floated right</div>\n  <div style=\"float: left;\">Content floated left</div>\n  <div class=\"clear\">Content cleared for both sides</div>\n</div>\n"
    },
    "hotkeys.volume": {
        "markup": "<div ng-controller=\"hotkeysVolumeCtrl\">\n  <p>Press `?` to see the shortcut cheat-sheet.</p>\n\n  <p>Current Volume: <span ng-bind=\"volume\"></span></p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('hotkeysVolumeCtrl', function ($scope, hotkeys) {\n    $scope.volume = 5;\n\n    // Remove combos so we don't add them multiple times\n    hotkeys.del('ctrl+up');\n    hotkeys.del('ctrl+down');\n\n    // Add desired combos\n    hotkeys.add({\n        combo: 'ctrl+up',\n        description: 'Turn up the volume!',\n        callback: function () {\n            $scope.volume += 1;\n        }\n    });\n\n    hotkeys.add({\n        combo: 'ctrl+down',\n        description: 'Turn it down!',\n        callback: function () {\n            $scope.volume -= 1;\n        }\n    });\n});\n"
    },
    "rxAge.demo": {
        "markup": "<div ng-controller=\"rxAgeCtrl\" id=\"rxAge-demo\">\n    <ol class=\"list\">\n        <li>{{ageHours}} &rarr; {{ageHours | rxAge}}</li>\n        <li>{{ageDays}} &rarr; {{ageDays | rxAge}}</li>\n        <li>{{ageMonths}} &rarr; {{ageMonths | rxAge}}</li>\n        <li>{{ageYears}} &rarr; {{ageYears | rxAge}}</li>\n        <li>{{ageHours}} &rarr; {{ageHours | rxAge:true}}</li>\n        <li>{{ageDays}} &rarr; {{ageDays | rxAge:true}}</li>\n        <li>{{ageMonths}} &rarr; {{ageMonths | rxAge:true}}</li>\n        <li>{{ageYears}} &rarr; {{ageYears | rxAge:true}}</li>\n        <li>{{ageHours}} &rarr; {{ageHours | rxAge:1:true}}</li>\n        <li>{{ageDays}} &rarr; {{ageDays | rxAge:2:true}}</li>\n        <li>{{ageMonths}} &rarr; {{ageMonths | rxAge:3:true}}</li>\n        <li>{{ageYears}} &rarr; {{ageYears | rxAge:3:true}}</li>\n    </ol>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxAgeCtrl', function ($scope) {\n    var day = 1000 * 60 * 60 * 24;\n    $scope.ageHours = new Date((Date.now() - (day / 2.3))).toString();\n    $scope.ageDays = new Date((Date.now() - (day * 1.5))).toString();\n    $scope.ageMonths = new Date((Date.now() - (day * 40.2))).toString();\n    $scope.ageYears = new Date((Date.now() - (day * 380.1))).toString();\n});\n"
    },
    "rxApply.simple": {
        "markup": "<div ng-controller=\"rxApplySimpleCtrl\">\n  <h3>Filtered Table</h3>\n  <table class=\"table-striped\">\n    <thead>\n      <th colspan=\"3\" class=\"filter-header\">\n        <form rx-form>\n          <rx-form-section controlled-width>\n            <rx-select-filter filter=\"filter\"></rx-select-filter>\n          </rx-form-section>\n        </form>\n      </th>\n      <tr>\n        <th>Account</th>\n        <th>Status</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat=\"ticket in (filteredTickets = (tickets | rxApply:filter))\">\n        <td>{{ticket.account}}</td>\n        <td>{{ticket.status}}</td>\n        <td>{{ticket.description}}</td>\n      </tr>\n      <tr ng-if=\"filteredTickets.length === 0\">\n        <td colspan=\"6\">\n          <div ng-if=\"tickets.length === 0\">No tickets were found.</div>\n          <div ng-if=\"tickets.length !== 0\">No results match those criteria.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxApplySimpleCtrl', function ($scope, rxSelectFilter) {\n    $scope.filter = rxSelectFilter.create({\n        properties: ['account', 'status'],\n        selected: {\n            account: ['A']\n        }\n    });\n\n    $scope.tickets = [\n        { account: 'A', status: 'NEW', description: 'Open a new service ticket.' },\n        { account: 'A', status: 'IN_PROGRESS', description: 'Updating server status.' },\n        { account: 'B', status: 'TRANSFERRED', description: 'Transferred account to ORD region.' },\n        { account: 'B', status: 'VENDOR', description: 'Added new third-party vendor service.' },\n        { account: 'A', status: 'TRANSFERRED', description: 'Transferred account to IAD region.' }\n    ];\n});\n"
    },
    "rxAttributes.demo": {
        "markup": "<div ng-controller=\"rxAttributesCtrl\">\n  <p>\n    <strong>\n      The following content gets replaced by the value of ng-bind. \n      It also gets some styles applied to it:\n    </strong>\n  </p>\n  <p rx-attributes=\"{'ng-bind': customContent, 'style': customStyles}\">\n    Content that's replaced\n  </p>\n\n  <p>\n    <strong>\n      The following content doesn't get replaced, \n      since 'nothing' isn't a property on the scope:\n    </strong>\n  </p>\n  <p rx-attributes=\"{'ng-bind': nothing}\">Non-replaced content</p>\n\n  <p>\n    <strong>\n      The following content (you can't see it) does get replaced, \n      but by nothing, since 'nothing' isn't a property on the scope.\n      This is what rx-attributes avoids\n    </strong>\n  </p>\n  <p ng-bind=\"nothing\">Content that's unintentionally replaced</p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxAttributesCtrl', function ($scope) {\n    $scope.customStyles = 'color: red; font-weight: bold;';\n    $scope.customContent = '\"Custom Content\"';\n});\n"
    },
    "rxAutoSave.simple": {
        "markup": "<div ng-controller=\"rxAutoSaveSimpleCtrl\">\n  <form name=\"demoForm\" rx-form>\n    <rx-form-section stacked>\n      <rx-field>\n        <rx-field-name>A checkbox field:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input rx-checkbox id=\"chkCheckbox\" ng-model=\"formData.checkbox\" />\n            <label for=\"chkCheckbox\">I likely don't disagree</label>\n          </rx-input>\n          <div class=\"subdued\">\n            <div ng-if=\"formData.checkbox\" ng-hide=\"formData.hideCheckbox\">\n              I am possibly not un-authorizing the above: {{ formData.checkbox }}\n            </div>\n            <a id=\"hideCheckbox\" ng-click=\"formData.hideCheckbox = !formData.hideCheckbox\" ng-if=\"formData.checkbox\">\n              ({{ formData.hideCheckbox ? 'Show' : 'Hide this' }} message)\n            </a>\n          </div>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Name:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\" ng-model=\"formData.name\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Description:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <textarea rows=\"10\" ng-model=\"formData.description\"></textarea>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Sensitive Data:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\" ng-model=\"formData.sensitive\" />\n          </rx-input>\n          <rx-help-text>We'll tell rxAutoSave NOT to save this data.</rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <rx-form-section>\n      <div>\n        <rx-button\n            ng-click=\"clearStorage()\"\n            toggle=\"status.loading\"\n            default-msg=\"Clear rxAutoSave\"\n            toggle-msg=\"Clearing rxAutoSave data\"\n            ng-disabled=\"status.disable\">\n        </rx-button>\n\n        <rx-button\n            ng-click=\"deferredClear()\"\n            toggle=\"status.deferredLoading\"\n            default-msg=\"Clear rxAutoSave by resolving a promise\"\n            toggle-msg=\"Clearing rxAutoSave data\"\n            ng-disabled=\"status.deferredDisable\">\n        </rx-button>\n      </div>\n    </rx-form-section>\n  </form>\n\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxAutoSaveSimpleCtrl', function ($scope, $timeout, $q, rxNotify, rxAutoSave) {\n    $scope.formData = {\n        checkbox: false,\n        name: '',\n        description: '',\n        sensitive: ''\n    };\n\n    var autosave = rxAutoSave($scope, 'formData', {\n        exclude: ['sensitive'],\n        ttl: 86400000\n    });\n\n    $scope.status = {\n        loading: false,\n        disable: false,\n        deferredLoading: false,\n        deferredDisable: false\n    };\n\n    var clearMsg = [\n        'rxAutoSave data has been cleared!',\n        'Navigate away and return, and the form will not be auto-populated'\n    ].join(' ');\n\n    // Clear with an explicit autosave.clear() call\n    $scope.clearStorage = function () {\n        $scope.status.loading = true;\n        $timeout(function () {\n            $scope.status.loading = false;\n            autosave.clear();\n            rxNotify.add(clearMsg, { type: 'success' });\n        }, 1000);\n    };\n\n    // Clear by resolving the associated promise\n    $scope.deferredClear = function () {\n        var deferred = $q.defer();\n\n        autosave.clearOnSuccess(deferred.promise);\n        $scope.status.deferredLoading = true;\n\n        $timeout(function () {\n            $scope.status.deferredLoading = false;\n            deferred.resolve();\n            rxNotify.add(clearMsg, { type: 'success' });\n        }, 1000);\n    };\n});\n"
    },
    "rxBytesConvert.demo": {
        "markup": "<div ng-controller=\"rxBytesConvertCtrl\" id=\"rx-bytes-convert-demo\">\n    <ul>\n        <li>{{sizeGB}} &rarr; {{sizeGB | rxBytesConvert}}</li>\n        <li>{{sizeTB}} &rarr; {{sizeTB | rxBytesConvert}}</li>\n        <li>{{sizePB}} &rarr; {{sizePB | rxBytesConvert}}</li>\n    </ul>\n    <ul>\n        <li>{{sizeGB}} B &rarr; {{sizeGB | rxBytesConvert:'GB'}}</li>\n        <li>{{sizeTB}} B &rarr; {{sizeTB | rxBytesConvert:'TB'}}</li>\n        <li>{{sizePB}} B &rarr; {{sizePB | rxBytesConvert:'PB'}}</li>\n    </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxBytesConvertCtrl', function ($scope) {\n    $scope.sizeGB = 42e10; // 420 GB\n    $scope.sizeTB = 125e12; // 125 TB\n    $scope.sizePB = 17134e13; // 171.34 PB\n});\n"
    },
    "rxCapitalize.demo": {
        "markup": "<div ng-controller=\"rxCapitalizeCtrl\">\n    {{hello | rxCapitalize}}\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('rxCapitalizeCtrl', function ($scope) {\n    $scope.hello = 'hello world this is my text.';\n});\n"
    },
    "rxCompile.demo": {
        "markup": "<div ng-controller=\"rxCompileDemoCtrl\">\n  <input type=\"text\" ng-model=\"world\">\n  <div rx-compile=\"myExpression\"></div>\n  <div>{{myExpression}}</div>\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('rxCompileDemoCtrl', function ($scope) {\n    $scope.world = 'wrrrld';\n    $scope.myExpression = 'Hello {{world}}';\n});\n"
    },
    "rxDate.demo": {
        "markup": "<div ng-controller=\"rxDateDemoCtrl\">\n  <ul>\n    <li>{{dateString}} &rarr; {{dateString | rxDate}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxDate: 'long'}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxDate: 'short'}}</li>\n  </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxDateDemoCtrl', function ($scope) {\n    $scope.dateString = '2015-09-17T19:37:17Z';\n});\n"
    },
    "rxDateTime.demo": {
        "markup": "<div ng-controller=\"rxDateTimeDemoCtrl\">\n  <ul>\n    <li>{{dateString}} &rarr; {{dateString | rxDateTime}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxDateTime: 'long'}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxDateTime: 'short'}}</li>\n  </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxDateTimeDemoCtrl', function ($scope) {\n    $scope.dateString = '2015-09-17T19:37:17Z';\n});\n"
    },
    "rxDiskSize.demo": {
        "markup": "<div ng-controller=\"rxDiskSizeCtrl\" id=\"rx-disk-size-demo\">\n    <ul>\n        <li>{{sizeGB}} &rarr; {{sizeGB | rxDiskSize}}</li>\n        <li>{{sizeTB}} &rarr; {{sizeTB | rxDiskSize}}</li>\n        <li>{{sizePB}} &rarr; {{sizePB | rxDiskSize}}</li>\n    </ul>\n    <ul>\n        <li>{{sizeGB}} GB &rarr; {{sizeGB | rxDiskSize:'GB'}}</li>\n        <li>{{sizeTB}} GB &rarr; {{sizeTB | rxDiskSize:'TB'}}</li>\n        <li>{{sizePB}} GB &rarr; {{sizePB | rxDiskSize:'PB'}}</li>\n    </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxDiskSizeCtrl', function ($scope) {\n    $scope.sizeGB = 420;\n    $scope.sizeTB = 125000;\n    $scope.sizePB = 171337000;\n});\n"
    },
    "rxEnvironment.simple": {
        "markup": "<div ng-controller=\"rxEnvironmentSimpleCtrl\">\n  <ul>\n    <li>Your current enviroment: <strong>{{name}}</strong></li>\n    <li>URL: <code>http:{{url}}</code></li>\n  </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxEnvironmentSimpleCtrl', function ($scope, rxEnvironment) {\n    var environment = rxEnvironment.get();\n    $scope.url = environment.url;\n    $scope.name = environment.name;\n});\n"
    },
    "rxEnvironmentMatch.simple": {
        "markup": "<p>\n  Are you in the <code>ghPages</code> environment? <b>{{ 'ghPages' | rxEnvironmentMatch }}</b>\n</p>\n"
    },
    "rxEnvironmentUrl.simple": {
        "markup": "<p>\n  URL built from <code>rxEnvironment</code> data:\n  <pre>http:{{ { tld: 'cloudatlas', path: 'some/path' } | rxEnvironmentUrl }}</pre>\n</p>\n"
    },
    "rxErrorFormatter.simple": {
        "markup": "<div ng-controller=\"rxErrorFormatterSimpleCtrl\">\n  <p>\n    <button class=\"button\"\n      ng-click=\"setErrorMsg('this is an error message set with rxErrorFormatter.')\">\n      Set Error Message\n    </button>\n    should set an error message with <code>rxErrorFormatter</code>.\n  </p>\n  <p>{{errorMsg}}</p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxErrorFormatterSimpleCtrl', function ($scope, rxErrorFormatter) {\n    $scope.setErrorMsg = function (msg) {\n        var error = { message: msg };\n        $scope.errorMsg = rxErrorFormatter.buildErrorMsg('Error: ${message}', error);\n    };\n});\n"
    },
    "rxIfEnvironment.simple": {
        "markup": "<p>\n  Content shows if on GitHub demo page:\n  <span rx-if-environment=\"ghPages\">\n    You're on the GitHub demo page\n  </span>\n</p>\n\n<p>\n  Content shows if not on GitHub demo page:\n  <span rx-if-environment=\"!ghPages\">\n    You're not on the GitHub demo page\n  </span>\n</p>\n"
    },
    "rxLocalStorage.simple": {
        "markup": "<div ng-controller=\"rxLocalStorageSimpleCtrl\">\n  <label>Who is the Joker's side kick?</label>\n  <button ng-click=\"setSideKick()\" class=\"button button-positive\">Store Answer</button>\n  <button ng-click=\"getSideKick()\" class=\"button\">Answer?</button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxLocalStorageSimpleCtrl', function ($scope, $window, rxLocalStorage) {\n    $scope.setSideKick = function () {\n        rxLocalStorage.setObject('joker', { name: 'Harley Quinn' });\n    };\n\n    $scope.getSideKick = function () {\n        var sidekick = rxLocalStorage.getObject('joker');\n        $window.alert(sidekick.name);\n    };\n});\n"
    },
    "rxMonth.demo": {
        "markup": "<div ng-controller=\"rxMonthDemoCtrl\">\n  <ul>\n    <li>{{dateString}} &rarr; {{dateString | rxMonth}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxMonth: 'long'}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxMonth: 'short'}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxMonth: 'micro'}}</li>\n  </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxMonthDemoCtrl', function ($scope) {\n    $scope.dateString = '2015-09-17T19:37:17Z';\n});\n"
    },
    "rxPageTitle.simple": {
        "markup": "<div ng-controller=\"rxPageTitleSimpleCtrl\">\n  Current Title: {{pageTitle}} <button ng-click=\"refreshTitle()\" class=\"button\">Get Updated Title</button><br />\n\n  <input type=\"text\" ng-change=\"changeTitle()\" ng-model=\"newTitle\" placeholder=\"New Title\" />\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('rxPageTitleSimpleCtrl', function ($scope, rxPageTitle) {\n    $scope.changeTitle = function () {\n        rxPageTitle.setTitle($scope.newTitle);\n    };\n\n    $scope.refreshTitle = function () {\n        $scope.pageTitle = rxPageTitle.getTitle();\n    };\n\n    $scope.refreshTitle();\n});\n"
    },
    "rxPermission.simple": {
        "markup": "<div ng-controller=\"rxPermissionSimpleCtrl\">\n  <button class=\"storeToken button\"\n    name=\"button\"\n    ng-click=\"storeToken()\">Store Token</button>\n  <button class=\"clearToken button button-negative\"\n    name=\"button\"\n    ng-click=\"clearToken()\">Clear Token</button>\n\n  <rx-permission role=\"test\">\n    <rx-notifications stack=\"permission\"></rx-notifications>\n  </rx-permission>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxPermissionSimpleCtrl', function ($scope, rxSession, rxNotify) {\n    rxNotify.add('Respect My Authority!!', {\n        stack: 'permission',\n        type: 'warning'\n    });\n\n    $scope.storeToken = function () {\n        rxSession.storeToken({\n            access: {\n                user: {\n                    roles: [{ name: 'test' }]\n                }\n            }\n        });\n    };\n\n    $scope.clearToken = function () {\n        rxSession.logout();\n    };\n});\n"
    },
    "rxPromiseNotifications.simple": {
        "markup": "<div ng-controller=\"rxPromiseNotificationsSimpleCtrl\">\n  <p>\n    <button class=\"button\" ng-click=\"addPromise()\">Create Promise</button>\n    <button class=\"button positive\" ng-click=\"deferred.resolve()\">Resolve Promise</button>\n    <button class=\"button negative\" ng-click=\"deferred.reject()\">Reject Promise</button>\n  </p>\n\n  <h3>Demo Stack</h3>\n  <rx-notifications stack=\"demo\"></rx-notifications>\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('rxPromiseNotificationsSimpleCtrl', function ($scope, rxNotify, rxPromiseNotifications, $q) {\n\n    $scope.add = function (stack) {\n        var messageOptions = _.clone($scope.options);\n\n        if ($scope.ondismiss.should) {\n            messageOptions.ondismiss = _.clone($scope.ondismiss.method);\n        }\n\n        messageOptions.stack = stack;\n\n        rxNotify.add($scope.message, messageOptions);\n    };\n\n    rxNotify.add('Helpful Information', {\n        stack: 'demo'\n    });\n    rxNotify.add('Additional Helpful Information', {\n        stack: 'demo'\n    });\n\n    $scope.addPromise = function () {\n        $scope.deferred = $q.defer();\n\n        rxPromiseNotifications.add($scope.deferred.promise, {\n            loading: 'Loading Service',\n            success: 'Service Succesfully Loaded',\n            error: 'Error Loading Service'\n        }, 'demo');\n    };\n});\n"
    },
    "rxSession.simple": {
        "markup": "<div ng-controller=\"rxSessionSimpleCtrl\">\n    <button ng-click=\"hasRole()\" class=\"button\">Is a Superhero?</button>\n    <button ng-click=\"isAuthenticated()\" class=\"button\">Is Authenticated?</button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxSessionSimpleCtrl', function ($scope, $window, rxSession) {\n    $scope.hasRole = function () {\n        $window.alert('Has \"superhero\" Role? : ' + rxSession.hasRole('superhero'));\n    };\n\n    $scope.isAuthenticated = function () {\n        $window.alert('Is Authenticated? : ' + rxSession.isAuthenticated());\n    };\n});\n"
    },
    "rxSessionStorage.simple": {
        "markup": "<div ng-controller=\"rxSessionStorageSimpleCtrl\">\n    <label>Who is Batman's side kick?</label>\n    <button ng-click=\"setSideKick()\" class=\"button button-positive\">Store Answer</button>\n    <button ng-click=\"getSideKick()\" class=\"button\">Answer?</button>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxSessionStorageSimpleCtrl', function ($scope, $window, rxSessionStorage) {\n    $scope.setSideKick = function () {\n        rxSessionStorage.setItem('Batman', 'Robin');\n    };\n\n    $scope.getSideKick = function () {\n        $window.alert(rxSessionStorage.getItem('Batman'));\n    };\n});\n"
    },
    "rxSortEmptyTop.simple": {
        "markup": "<div ng-controller=\"rxSortEmptyTopSimpleCtrl\">\n  <p>The table is using <code>rxSortEmptyTop</code> to sort empty columns in ascending and descending order.</p>\n  <table rx-floating-header>\n    <thead>\n      <tr>\n        <th scope=\"col\">\n          <rx-sortable-column\n            sort-method=\"sortCol(property)\"\n            sort-property=\"name\"\n            predicate=\"sort.predicate\"\n            reverse=\"sort.reverse\">\n            Name\n          </rx-sortable-column>\n        </th>\n        <th scope=\"col\">\n          <rx-sortable-column\n            sort-method=\"sortCol(property)\"\n            sort-property=\"volumeId\"\n            predicate=\"sort.predicate\"\n            reverse=\"sort.reverse\">\n            Volume ID\n          </rx-sortable-column>\n        </th>\n      </tr>\n    </thead>\n    <tbody id=\"serverVolumeData\">\n      <tr ng-repeat=\"resource in serverVolumes | rxSortEmptyTop:sort.predicate:sort.reverse\">\n        <th scope=\"row\" class=\"resource-name\">{{resource.name}}</th>\n        <td class=\"resource-id\">{{resource.volumeId}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxSortEmptyTopSimpleCtrl', function ($scope, rxPageTracker, rxSortUtil) {\n    $scope.sort = rxSortUtil.getDefault('name');\n    $scope.sort = rxSortUtil.getDefault('name', false);\n    $scope.pager = rxPageTracker.createInstance();\n\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n\n    $scope.serverVolumes = [\n        {\n            name: 'Monitor Agent 4',\n            volumeId: 'a44079a5-040b-495f-be22-35994ea03cc5'\n        },\n        {\n            name: 'Stress Volume 33',\n            volumeId: '65d89e82-9363-482e-92d1-f3f7d4f135a7'\n        },\n        {\n            name: null,\n            volumeId: '0a87a764-45f0-4a1e-8dbf-20d76291022d'\n        },\n        {\n            name: 'Stress Volume 24',\n            volumeId: ''\n        },\n        {\n            name: null,\n            volumeId: 'be827f83-8d4c-4d4c-afc3-4c9bf0fdfe00'\n        },\n    ];\n});\n"
    },
    "rxStatus.simple": {
        "markup": "<div ng-controller=\"rxStatusSimpleCtrl\">\n  <div style=\"clear: left;\">\n    <ol>\n      <li>\n        <button class=\"button\" ng-click=\"setLoading('This should set a spinner')\">setLoading</button>\n        should set a spinner\n      </li>\n      <li>&nbsp;</li>\n      <li>\n        <button class=\"button\" ng-click=\"setSuccess('This should show a success on $routeChangeSuccess')\">setSuccess</button>\n        should show a success on <strong>$routeChangeSuccess</strong> -\n        <button class=\"button\" ng-click=\"triggerRouteChangeSuccess()\">Trigger it!</button>\n      </li>\n      <li>&nbsp;</li>\n      <li>\n        <button class=\"button\" ng-click=\"setSuccessNext('This should show a success on $routeChangeSuccess')\">setSuccessNext</button>\n        should show a success on <strong>$routeChangeSuccess</strong> -\n        <button class=\"button\" ng-click=\"triggerRouteChangeSuccess()\">Trigger it!</button>\n      </li>\n      <li>&nbsp;</li>\n      <li>\n        <button class=\"button\" ng-click=\"setSuccessImmediate('This should show a success immediately')\">setSuccessImmediate</button>\n        should show a <strong>success immediately</strong>\n      </li>\n      <li>&nbsp;</li>\n      <li>\n        <button class=\"button\" ng-click=\"setWarning('This should set a warning')\">setWarning</button>\n        should set a <strong>warning</strong>\n      </li>\n      <li>&nbsp;</li>\n      <li>\n        <button class=\"button\" ng-click=\"setInfo('This should set an informational')\">setInfo</button>\n        should set an <strong>informational</strong>\n      </li>\n      <li>&nbsp;</li>\n      <li>\n        <button class=\"button\" ng-click=\"setError('This should set an error')\">setError</button>\n        should set an <strong>error</strong>\n      </li>\n    </ol>\n\n    <hr ng-show=\"!!notify\" />\n    <p ng-show=\"!!notify\">\n      <button class=\"button\" ng-click=\"dismiss()\">Dismiss</button>\n      the message shown\n    </p>\n\n    <p ng-show=\"notify\">\n      <button class=\"button\" ng-click=\"clear()\">Clear</button>\n      all shown messages\n    </p>\n  </div>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxStatusSimpleCtrl', function ($scope, $rootScope, rxStatus) {\n    rxStatus.setScope($scope);\n\n    $scope.triggerRouteChangeSuccess = function () {\n        $rootScope.$broadcast('$routeChangeSuccess');\n    };\n\n    $scope.clear = function () {\n        rxStatus.clear();\n        $scope.notify = undefined;\n    };\n\n    $scope.setLoading = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setLoading(msg);\n    };\n\n    $scope.setSuccess = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setSuccess(msg);\n    };\n\n    $scope.setSuccessNext = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setSuccessNext(msg);\n    };\n\n    $scope.setSuccessImmediate = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setSuccessImmediate(msg);\n    };\n\n    $scope.setWarning = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setWarning(msg);\n    };\n\n    $scope.setInfo = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setInfo(msg);\n    };\n\n    $scope.setError = function (msg) {\n        rxStatus.clear();\n        $scope.notify = rxStatus.setError(msg);\n    };\n\n    $scope.dismiss = function () {\n        $scope.notify && rxStatus.dismiss($scope.notify);\n        $scope.notify = undefined;\n    };\n});\n"
    },
    "rxStatusMappings.demo": {
        "less": ".rxStatusMappings-demo {\n  .demo-status-column-table {\n    max-width: 500px;\n  }\n}\n"
    },
    "rxStatusMappings.simple": {
        "markup": "<div ng-controller=\"rxStatusMappingsSimpleCtrl\">\n  <p><strong>Tip:</strong> Hover over each status to see pop-up status value.</p>\n  <table class=\"table-striped demo-status-column-table\">\n    <thead>\n      <tr>\n        <th rx-status-header>Status</th>\n        <th>Title</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat=\"server in servers | orderBy: sort.predicate:sort.reverse \">\n        <!-- Both `api` and `tooltip-content` are optional -->\n        <td rx-status-column status=\"{{ server.status }}\" api=\"{{ server.api }}\" tooltip-content=\"{{ server.status }}\"></td>\n        <td>{{ server.title }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxStatusMappingsSimpleCtrl', function ($scope, rxStatusMappings) {\n    $scope.servers = [\n        { status: 'ACTIVE', title: 'ACTIVE status' },\n        { status: 'ERROR', title: 'ERROR status' },\n        { status: 'DISABLED', title: 'DISABLED status' },\n        { status: 'DELETED', title: 'DELETED status mapped to ERROR' },\n        { status: 'UNKNOWN', title: 'UNKNOWN status mapped to ERROR' },\n        { status: 'RESCUE', title: 'RESCUE status mapped to INFO' },\n        { status: 'SUSPENDED', title: 'SUSPENDED status mapped to WARNING' },\n        { status: 'REBUILD', title: 'REBUILD status mapped to PENDING' },\n        { status: 'RESIZE', title: 'RESIZE status mapped to PENDING' },\n        { status: 'MIGRATING', title: 'MIGRATING status mapped to PENDING' },\n        { status: 'DELETING', title: 'DELETING status mapped to PENDING, using `fooApi` mapping', api: 'fooApi' }\n    ];\n\n    // We have a few different ways of adding mappings. We've tried to show them all here\n    rxStatusMappings.addGlobal({\n        'DELETING': 'PENDING'\n    });\n    rxStatusMappings.mapToInfo('RESCUE');\n    rxStatusMappings.mapToWarning('SUSPENDED');\n    rxStatusMappings.mapToPending(['REBUILD','RESIZE','MIGRATING']);\n    rxStatusMappings.mapToError(['DELETED', 'UNKNOWN']);\n    rxStatusMappings.addAPI('fooApi', { 'DELETING': 'PENDING' });\n    rxStatusMappings.mapToPending('SomeApiSpecificStatus', 'fooApi');\n});\n"
    },
    "rxTime.demo": {
        "markup": "<div ng-controller=\"rxTimeDemoCtrl\">\n  <ul>\n    <li>{{dateString}} &rarr; {{dateString | rxTime}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxTime: 'long'}}</li>\n    <li>{{dateString}} &rarr; {{dateString | rxTime: 'short'}}</li>\n  </ul>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxTimeDemoCtrl', function ($scope) {\n    $scope.dateString = '2015-09-17T19:37:17Z';\n});\n"
    },
    "rxTitleize.simple": {
        "markup": "<div ng-controller=\"rxTitleizeSimpleCtrl\">\n    {{sample | rxTitleize}}\n</div>",
        "javascript": "angular.module('demoApp')\n.controller('rxTitleizeSimpleCtrl', function ($scope) {\n    $scope.sample = 'HELLO_welcome TO ENCore FRamework!';\n});\n"
    },
    "rxToggle.simple": {
        "markup": "<button rx-toggle=\"visible\"\n  id=\"vacillator\"\n  class=\"button\">Toggle Div\n</button>\n<p>Current state: {{visible}}</p>\n<div ng-show=\"visible\" id=\"vacillated\">\n  Shows when $scope.visibile == true\n</div>"
    },
    "rxUnsafeRemoveHTML.simple": {
        "markup": "<div ng-controller=\"rxUnsafeRemoveHTMLSimpleCtrl\">\n  <p><strong>Tip:</strong> See <code>JavaScript</code> Tab for unparsed string.</p>\n  <p><strong>Parsed String:</strong> {{sample | rxUnsafeRemoveHTML}}</p>\n</div>\n",
        "javascript": "angular.module('demoApp')\n.controller('rxUnsafeRemoveHTMLSimpleCtrl', function ($scope) {\n    $scope.sample = 'Sample string <strong>without</strong> <span>HTML tags</span>.';\n});\n"
    },
    "layout.grid": {
        "markup": "<div class=\"layout-demo\">\n\n  <!-- Layout Attribute -->\n  <a id=\"Attribute\"></a>\n\n  <h2>Layout Attribute</h2>\n\n  <p>Use the <code>layout</code> attribute on an element to arrange its children horizontally in a\n  row (<code>layout=\"row\"</code>), or vertically in a column (<code>layout=\"column\"</code>).</p>\n\n  <h3>Row Layout</h3>\n\n  <div layout=\"row\">\n    <div class=\"box dark-blue\">I'm left.</div>\n    <div class=\"box light-blue\">I'm right.</div>\n  </div>\n\n  <h3>Column Layout</h3>\n  <div layout=\"column\">\n    <div class=\"box dark-blue\">I'm above.</div>\n    <div class=\"box light-blue\">I'm below.</div>\n  </div>\n\n  <p>See <a href=\"#/components/layout#Options\">Options</a> for information on responsive layouts and other\n  options.</p>\n\n\n  <!-- Grid System-->\n  <a id=\"Grid\"></a>\n\n  <h2>Grid System</h2>\n\n  <p>To customize the size and position of elements in a layout, use the <code>flex</code>, <code>flex-offset</code>,\n  and <code>flex-order</code> attributes.</p>\n\n\n  <h3>Flex Attribute</h3>\n\n  <div layout=\"row\">\n    <div flex class=\"flex-box dark-blue\">\n      [flex]\n    </div>\n    <div flex class=\"flex-box light-blue\">\n      [flex]\n    </div>\n    <div flex class=\"flex-box dark-green\">\n      [flex]\n    </div>\n  </div>\n\n  <p>Add the <code>flex</code> attribute to a layout's child element, and it will flex (stretch) to fill the\n  available area.</p>\n\n\n  <h3>Flex Percent Values</h3>\n\n  <div layout=\"row\" layout-wrap>\n    <div flex=\"33\" class=\"flex-box dark-blue\">\n      [flex=\"33\"]\n    </div>\n    <div flex=\"55\" class=\"flex-box light-blue\">\n      [flex=\"55\"]\n    </div>\n    <div flex class=\"flex-box orange\">\n      [flex]\n    </div>\n    <div flex=\"66\" class=\"flex-box light-green\">\n      [flex=\"66\"]\n    </div>\n    <div flex=\"33\" class=\"flex-box dark-green\">\n      [flex=\"33\"]\n    </div>\n  </div>\n\n  <p>A layout child's <code>flex</code> attribute can be given an integer value from 0-100. The element will stretch\n  to the percentage of available space matching the value.</p>\n\n  <p>The <code>flex</code> attribute value is restricted to 33, 66, and multiples of five. For\n  example: <code>flex=\"5\"</code>, <code>flex=\"20\"</code>, \"<code>flex=\"33\"</code>, <code>flex=\"50\"</code>,\n  <code>flex=\"66\"</code>, <code>flex=\"75\"</code>, ....</p>\n\n  <p>See the <a href=\"#/components/layout#Options\">layout options</a> for more information on responsive flex\n  attributes.</p>\n\n  <h3>Static Flex Options</h3>\n\n  <div layout=\"row\">\n    <div flex class=\"flex-fix flex-box dark-blue\">\n      flex: 0 0 200px;\n    </div>\n    <div flex=\"55\" class=\"flex-box light-blue\">\n      [flex=\"55\"]\n    </div>\n    <div flex class=\"flex-box orange\">\n      [flex]\n    </div>\n  </div>\n\n  <p>CSS <code>flexbox</code> implementation provides the ability to define static flex items that will cooperate\n  alongside dynamic flex items.</p>\n\n  <p>A static flex item has the following property definition:</p>\n  <pre>\n  flex-grow: 0; // do not grow\n  flex-shrink: 0; // do not shrink\n  flex-basis: N; // set height/width to this value (depending on the value of flex-direction)\n\n  /* or using the shorthand */\n  flex: 0 0 N; // [ grow | shrink | basis ]\n  </pre>\n  <p><code>flex-basis</code> value may be a valid CSS <a href=\"http://www.w3.org/TR/css3-values/#lengths\">length</a>\n  or keyword.</p>\n\n  <h3>Flex Order Attribute</h3>\n\n  <div layout=\"row\" layout-margin>\n    <div flex flex-order=\"3\" class=\"flex-box dark-blue margin-left\">\n      [flex-order=\"3\"]\n    </div>\n    <div flex flex-order=\"2\" class=\"flex-box light-blue margin-right margin-left\">\n      [flex-order=\"2\"]\n    </div>\n    <div flex flex-order=\"1\" class=\"flex-box dark-green margin-right\">\n      [flex-order=\"1\"]\n    </div>\n  </div>\n\n  <p>Add the <code>flex-order</code> attribute to a layout child to set its position within the layout. Any value\n  from 0-9 is accepted.</p>\n\n  <p>Note that the <code>flex-order</code> attribute is not compatible with the <code>layout-margin</code> attribute.\n  This is because the CSS selector engine selects based on DOM markup order and the <code>layout-margin</code>\n  attribute makes use of <code>:first-child</code> and <code>:last-child</code> to apply margins to only the inner\n  elements in the container. As a work-around, <code>[flex-order].left-margin</code> and\n  <code>[flex-order].right-margin</code> classes are availabe to manually add margins. The most likely use cases for\n  these classes is for programmatic ordering of children.</p>\n\n  <table>\n    <tr>\n      <td>flex-order</td>\n      <td>Sets element order.</td>\n    </tr>\n    <tr>\n      <td>flex-order-sm </td>\n      <td>Sets element order on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-order-gt-sm</td>\n      <td>Sets element order on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-order-md</td>\n      <td>Sets element order on devices between 600px and 960px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-order-gt-md</td>\n      <td>Sets element order on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-order-lg</td>\n      <td>Sets element order on devices between 960px and 1200px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-order-gt-lg</td>\n      <td>Sets element order on devices greater than 1200px wide.</td>\n    </tr>\n  </table>\n\n\n  <h3>Flex Offset Attribute</h3>\n\n  <div layout=\"row\">\n    <div flex flex-offset=\"33\" class=\"flex-box dark-blue\">\n      [flex offset=\"33\"]\n    </div>\n    <div flex class=\"flex-box light-blue\">\n      [flex]\n    </div>\n  </div>\n\n  <p>Add the <code>offset</code> attribute to a layout child to set its offset percentage within the layout.\n  Values must be multiples of <code>5</code>, or <code>33</code>, <code>34</code>, <code>66</code>,\n  <code>67</code>.</p>\n\n  <table>\n    <tr>\n      <td>offset</td>\n      <td>Sets element offset.</td>\n    </tr>\n    <tr>\n      <td>offset-sm</td>\n      <td>Sets element offset on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>offset-gt-sm</td>\n      <td>Sets element offset on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>offset-md</td>\n      <td>Sets element offset on devices between 600px and 960px wide.</td>\n    </tr>\n    <tr>\n      <td>offset-gt-md</td>\n      <td>Sets element offset on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n      <td>offset-lg</td>\n      <td>Sets element offset on devices between 960px and 1200px wide.</td>\n    </tr>\n    <tr>\n      <td>offset-gt-lg</td>\n      <td>Sets element offset on devices greater than 1200px wide.</td>\n    </tr>\n  </table>\n\n\n  <!-- Child Alignment -->\n  <a id=\"ChildAlignment\"></a>\n\n  <h2>Child Alignment</h2>\n\n  <p>The <code>layout-align</code> attribute takes two parameters in any order. Parameters <code>top</code>,\n  <code>middle</code>, <code>bottom</code>, <code>left</code>, <code>right</code>, and <code>center</code> determine\n  the alignment of child elements and may be combined in sensible ways (ie <code>top left</code> works but\n  <code>top bottom</code> would not).</p>\n\n  <p>Parameters <code>stretch</code>, <code>justify</code>, and <code>spread</code> determine the justification of\n  child elements. <code>Stretch</code> grows child elements perpendicular to layout axis (ie <code>layout=\"row\"</code>\n  stretches up and down). <code>Justify</code> and <code>spread</code> space out child elements evenly perpendicular\n  to layout axis either with or without side padding, respectively</p>\n\n  <p>Only one parameter is required for the attribute. For example, <code>layout=\"row\" layout-align=\"center\"</code>\n  would make the elements center horizontally and use the default behavior vertically.\n\n  <p><code>layout=\"column\" layout-align=\"right middle\"</code> would align children along the center vertically and\n  along the right horizontally.</p>\n\n  <table>\n    <tr>\n      <td>layout-align</td>\n      <td>Sets child alignment.</td>\n    </tr>\n    <tr>\n      <td>layout-align-sm</td>\n      <td>Sets child alignment on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>layout-align-gt-sm</td>\n      <td>Sets child alignment on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>layout-align-md</td>\n      <td>Sets child alignment on devices between 600px and 960px wide.</td>\n    </tr>\n    <tr>\n      <td>layout-align-gt-md</td>\n      <td>Sets child alignment on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n      <td>layout-align-lg</td>\n      <td>Sets child alignment on devices between 960px and 1200px wide.</td>\n    </tr>\n    <tr>\n      <td>layout-align-gt-lg</td>\n      <td>Sets child alignment on devices greater than 1200px wide.</td>\n    </tr>\n  </table>\n\n  <div ng-controller=\"layoutController\">\n    <p>See below for more examples:\n    <code>layout=\"{{layout}}\" layout-align=\"{{align.first}} {{align.second}}\"</code></p>\n\n    <div layout=\"{{layout}}\" layout-align=\"{{align.first}} {{align.second}}\" class=\"small-box-container\">\n      <div class=\"small-box light-blue\">one</div>\n      <div class=\"small-box dark-blue\">two</div>\n      <div class=\"small-box light-green\">three</div>\n    </div>\n\n    <div class=\"layout-examples\" layout=\"row\" layout-align=\"top spread\">\n      <div layout=\"column\">\n        <span>Layout Direction</span>\n        <label>\n          <input type=\"radio\" ng-model=\"layout\" value=\"row\" ng-click=\"swap('row')\"> row\n        </label>\n\n        <label>\n          <input type=\"radio\" ng-model=\"layout\" value=\"column\" ng-click=\"swap('column')\"> column\n        </label>\n      </div>\n\n      <div layout=\"column\">\n        <span>Alignment in Layout Direction</span>\n\n        <label ng-repeat=\"option in options1\" for=\"{{align1}}\">\n          <input type=\"radio\" name=\"align1\" ng-model=\"align.first\" ng-value=\"option\"> {{option}}\n        </label>\n      </div>\n\n      <div layout=\"column\">\n        <span>Alignment in Perpendicular Direction</span>\n\n        <label ng-repeat=\"option in options2\" for=\"{{align2}}\">\n          <input type=\"radio\" name=\"align2\" ng-model=\"align.second\" ng-value=\"option\"> {{option}}\n        </label>\n      </div>\n    </div>\n  </div>\n\n\n  <!-- Options -->\n  <a id=\"Options\"></a>\n\n  <h2>Options</h2>\n\n  <h3>Responsive Layout</h3>\n\n  <div layout=\"row\" layout-sm=\"column\">\n    <div flex class=\"grow-box dark-blue\">\n      I'm above on mobile, and to the left on larger devices.\n    </div>\n    <div flex class=\"grow-box light-blue\">\n      I'm below on mobile, and to the right on larger devices.\n    </div>\n  </div>\n\n  <p>See the <a href=\"#/components/layout#Attribute\">Attribute</a> section for a basic explanation of layout\n  attributes.</p>\n  <p>To make your layout change depending upon the device size, there are other <code>layout</code> attributes\n  available:</p>\n\n  <table>\n    <tr>\n      <td>layout</td>\n      <td>Sets the default layout on all devices.</td>\n    </tr>\n    <tr>\n      <td>layout-sm</td>\n      <td>Sets the layout on devices less than 600px wide (phones).</td>\n    </tr>\n    <tr>\n      <td>layout-gt-sm</td>\n      <td>Sets the layout on devices greater than 600px wide (bigger than phones).</td>\n    </tr>\n    <tr>\n      <td>layout-md</td>\n      <td>Sets the layout on devices between 600px and 960px wide (tablets in portrait).</td>\n    </tr>\n    <tr>\n      <td>layout-gt-md</td>\n      <td>Sets the layout on devices greater than 960px wide (bigger than tablets in portrait).</td>\n    </tr>\n    <tr>\n      <td>layout-lg</td>\n      <td>Sets the layout on devices between 960 and 1200px wide (tablets in landscape).</td>\n    </tr>\n    <tr>\n      <td>layout-gt-lg</td><td>Sets the layout on devices greater than 1200px wide (computers and large\n      screens).</td>\n    </tr>\n  </table>\n\n\n  <h3>Layout Margin, Padding, and Fill</h3>\n\n  <div layout=\"row\" layout-margin layout-fill layout-padding>\n    <div flex class=\"grow-box dark-blue\">I'm on the left, and there's an empty area around me.</div>\n    <div flex class=\"grow-box light-blue\">I'm on the right, and there's an empty area around me.</div>\n  </div>\n\n  <p><code>layout-margin</code> adds margin around each <code>flex</code> child. It also adds a margin to the layout\n  container itself.</p>\n  <p><code>layout-padding</code> adds padding inside each <code>flex</code> child. It also adds padding to the layout\n  container itself.</p>\n  <p><code>layout-fill</code> forces the layout element to fill its parent container.</p>\n\n\n  <h3>Wrap</h3>\n\n  <div layout=\"row\" layout-wrap>\n    <div flex=\"33\" class=\"grow-box dark-blue\">[flex=33]</div>\n    <div flex=\"66\" class=\"grow-box light-blue\">[flex=66]</div>\n    <div flex=\"66\" class=\"grow-box light-green\">[flex=66]</div>\n    <div flex=\"33\" class=\"grow-box dark-green\">[flex=33]</div>\n  </div>\n\n  <p><code>layout-wrap</code> allows <code>flex</code> children to wrap within the container if the elements use\n  more than 100%. By default, flex elements do not wrap.</p>\n\n\n  <h3>Responsive Flex &amp; Offset Attributes</h3>\n\n  <div layout=\"row\">\n    <div flex=\"66\" flex-sm=\"33\" class=\"grow-box dark-blue\">\n      I flex to one-third of the space on mobile, and two-thirds on other devices.\n    </div>\n    <div flex=\"33\" flex-sm=\"66\" class=\"grow-box light-blue\">\n      I flex to two-thirds of the space on mobile, and one-third on other devices.\n    </div>\n  </div>\n\n  <p>See the <a href=\"#/components/layout#Grid\">Grid</a> section for a basic explanation of flex and offset\n  attributes.</p>\n\n  <table>\n    <tr>\n      <td>flex</td>\n      <td>Sets flex.</td>\n    </tr>\n    <tr>\n      <td>flex-sm</td>\n      <td>Sets flex on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-gt-sm</td>\n      <td>Sets flex on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-md</td>\n      <td>Sets flex on devices between 600px and 960px wide..</td>\n    </tr>\n    <tr>\n      <td>flex-gt-md</td>\n      <td>Sets flex on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n      <td>flex-lg</td>\n      <td>Sets flex on devices between 960px and 1200px.</td>\n    </tr>\n    <tr>\n      <td>flex-gt-lg</td>\n      <td>Sets flex on devices greater than 1200px wide.</td>\n    </tr>\n  </table>\n\n\n  <h3>Hide and Show Attributes</h3>\n\n  <div layout layout-align=\"center center\" class=\"small-box-container\">\n    <div hide-sm class=\"grow-box dark-blue\">\n      I'm hidden on mobile and shown on larger devices.\n    </div>\n    <div hide-gt-sm class=\"grow-box dark-green\">\n      I'm shown on mobile and hidden on larger devices.\n    </div>\n  </div>\n\n  <table>\n    <tr>\n      <td>hide</td>\n      <td><code>display: none</code></td>\n    </tr>\n    <tr>\n      <td>hide-sm</td>\n      <td><code>display: none</code> on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>hide-gt-sm</td>\n      <td><code>display: none</code> on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>hide-md</td>\n      <td><code>display: none</code> on devices between 600px and 960px wide.</td>\n    </tr>\n    <tr>\n      <td>hide-gt-md</td>\n      <td><code>display: none</code> on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n      <td>hide-lg</td>\n      <td><code>display: none</code> on devices between 960px and 1200px.</td>\n    </tr>\n    <tr>\n      <td>hide-gt-lg</td>\n      <td><code>display: none</code> on devices greater than 1200px wide.</td>\n    </tr>\n    <tr>\n      <td>show</td>\n      <td>Negates hide.</td>\n    </tr>\n    <tr>\n      <td>show-sm</td>\n      <td>Negates hide on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>show-gt-sm</td>\n      <td>Negates hide on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n      <td>show-md</td>\n      <td>Negates hide on devices between 600px and 960px wide..</td>\n    </tr>\n    <tr>\n      <td>show-gt-md</td>\n      <td>Negates hide on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n      <td>show-lg</td>\n      <td>Negates hide on devices between 960px and 1200px.</td>\n    </tr>\n    <tr>\n      <td>show-gt-lg</td>\n      <td>Negates hide on devices greater than 1200px wide.</td>\n    </tr>\n  </table>\n</div>\n"
    },
    "typography.headings": {
        "markup": "<h1> H1. Extra Large Heading </h1>\n<h2> H2. Large Heading (standard page header) </h2>\n<h3> H3. Heading (medium, standard sub-header) </h3>\n<h3 class=\"subdued\"> H3. Subdued Heading </h3>\n<h4> H4. Small Heading </h4>\n<h5> H5. Extra Small Heading </h5>\n<h6> H6. Tiny Heading </h6>\n"
    },
    "typography.metadata": {
        "markup": "<rx-metadata>\n  <section>\n    <rx-meta label=\"Field Name\">Field Value Example</rx-meta>\n    <rx-meta label=\"Another Field Name\">Another Field Value Example</rx-meta>\n    <rx-meta label=\"Third Field Name\">The Third Field Value Example</rx-meta>\n    <rx-meta label=\"Fourth Field Name\">The Fourth Field Value Example</rx-meta>\n    <rx-meta label=\"Short Field Name\">\n      A long field value given here to show line break style.\n    </rx-meta>\n  </section>\n\n  <section>\n    <rx-meta label=\"Status\" id=\"metaStatus\">Active</rx-meta>\n    <rx-meta label=\"RCN\">RCN-555-555-555</rx-meta>\n    <rx-meta label=\"Type\">Cloud</rx-meta>\n    <rx-meta label=\"Service Level\">Managed &rarr; Managed</rx-meta>\n    <rx-meta label=\"Service Type\">DevOps &rarr; SysOps</rx-meta>\n  </section>\n\n  <section>\n    <rx-meta label=\"Amount\">$192.68</rx-meta>\n    <rx-meta label=\"Phone Number Field\">888 - 888 - 8888</rx-meta>\n    <rx-meta label=\"Date Field\">January 6, 1989 @ 00:00 (UTC-0600)</rx-meta>\n    <rx-meta label=\"Link Field\">\n      <a href=\"#\">Link</a>\n    </rx-meta>\n    <rx-meta label=\"Data and Link Field\">\n      Some data <a href=\"#\">(Link)</a>\n    </rx-meta>\n  </section>\n</rx-metadata>\n"
    },
    "wells.page": {
        "markup": "<div class=\"well centered\">\n  <h2>You need permissions or this data isn't here yet.</h2>\n  <ul class=\"list\">\n    <li>Here's a reason why you can't see it.</li>\n    <li>Here's a tip about what you can do to add data by clicking the button below.</li>\n  </ul>\n  <p><button class=\"button\">Add Data</button></p>\n</div>\n"
    }
});
