/* ===== rxForm ===== */
@import "vars";
@import "mixins";

/* Submit buttons */
.form-actions {
  padding: 20px 0;
}

/* NEW rxForm "2.0" STYLES  */
input,
textarea,
select {
  box-sizing: border-box;
  border: 0;
  outline: none;
}

[rx-form],
rx-form-section,
rx-field,
rx-field-name,
rx-field-content,
rx-input,
rx-inline-error,
rx-help-text {
  box-sizing: border-box;
  display: block;
  margin: 0;
  padding: 0;
}

rx-inline-error {
  color: @rxForm-error-text-color;
  display: flex;

  .fa {
    width: 1em;
  }
}

rx-help-text {
  font-size: 0.8em;
  font-style: italic;
  margin: 1em 0em;
}

rx-field-name {
  color: @app-label-text-color;
  font-size: @app-label-font-size;

  .wrapper {
    box-sizing: border-box;
    margin: 0;
    padding: 0;

    .required-symbol {
      font-weight: 900;
      color: @app-required-symbol-color;
    }
  }
}//rx-field-name

[rx-form] {
  font-size: @rxForm-font-size;
  margin: @rxForm-gutter 0;

  rx-field-name,
  rx-help-text,
  rx-inline-error,
  rx-input {
    margin-bottom: (@rxForm-gutter / 2);

    &:last-child {
      margin-bottom: 0;
    }
  }

  rx-form-section {
    // as flex container
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;

    margin: 0 (@rxForm-gutter / 2);

    & > div,
    rx-field {
      margin: 0 (@rxForm-gutter / 2) (@rxForm-gutter * 1.25);

      // http://www.w3.org/TR/css3-flexbox/images/rel-vs-abs-flex.svg
      // as dynamic flex item (3rd arg acts like min-width)
      flex: 1 0 @rxForm-field-min-width;
    }

    rx-field {
      // as flex container
      display: flex;
      flex-flow: column nowrap;
      justify-content: flex-start;

      rx-field-content {
        flex: 1 0 auto; // as flex item
        margin-bottom: @rxForm-gutter;

        &:last-child {
          margin-bottom: 0;
        }

        .validInput() {
          padding: 3px 5px;
          border: 1px solid @rxForm-input-border-color;
          &:focus {
            border-color: @app-input-focus-border-color;
            box-shadow: @app-input-focus-box-shadow;
            outline: none; //Remove chrome outline
          }
        }//.validInput()

        .invalidInput() {
          border: 2px solid @rxForm-invalid-input-border-color;
          // MUST differ with valid padding by 1px to
          // account for thicker border
          padding: 2px 4px;
        }//.invalidInput()

        .disabledInput() {
          border: 1px solid @rxForm-input-border-color;
          color: @app-disabled-text-color;
          background: @app-disabled-background-color;
          cursor: not-allowed !important; // lesshint importantRule: false
        }//.disabledInput()

        rx-input {
          // as a flex container
          display: flex;
          flex-flow: row nowrap;
          justify-content: flex-start;
          align-items: stretch;

         .button {
            margin-bottom: 0;
          }

          & > input,
          & > textarea {
            flex: 1 1 auto; // as dynamic flex item

            min-height: @rxForm-input-min-height;

            &,
            &.ng-valid {
              .validInput();
            }

            &.ng-invalid.ng-dirty {
              .invalidInput();

              // DISABLED STYLING
              // (these should trump all other styles)
              &[disabled] {
                .disabledInput();
              }
            }

            // DISABLED STYLING
            // (these should trump all other styles)
            &[disabled] {
              .disabledInput();
            }
          }

          rx-prefix,
          rx-suffix,
          rx-infix {
            box-sizing: border-box;
            min-height: @rxForm-input-min-height;
            padding: 0 (@rxForm-gutter / 4);
            flex: 0 0 auto; // as static flex item

            // as flex container
            display: flex;
            align-items: center; // content is vertically centered
          }

          rx-prefix:first-child {
            padding-left: 0;
          }

          rx-suffix:last-child {
            padding-right: 0;
          }

          /* ===== Other Directive Support ===== */
          .rxSelect {
            flex: 1 1 auto; // as dynamic flex item
          }

          rx-multi-select {
            flex: 1 1 auto; // as dynamic flex item
          }

          rx-date-picker {
            flex: 0 0 auto; // as static flex item
          }

          .rxCheckbox,
          .rxRadio,
          rx-toggle-switch {
            flex: 0 0 auto; // as static flex item

            & + label {
              margin-left: 5px;
            }
          }

          .rxCheckbox,
          .rxRadio,
          rx-toggle-switch {
            &[disabled] + label {
              color: @app-disabled-text-color;
            }
          }
          
          // rxCharacterCount support
          .counted-input-wrapper {
            flex: 1 0;

            input,
            textarea {
              width: 100%;
              .validInput();

              &.ng-invalid.ng-dirty {
                .invalidInput();

                // DISABLED STYLING
                // (these should trump all other styles)
                &[disabled] {
                  .disabledInput();
                }
              }

              // DISABLED STYLING
              // (these should trump all other styles)
              &[disabled] {
                .disabledInput();
              }
            }
          }
          
          rx-search-box {
            flex: 1 1;
          }
        }//rx-input
      }//rx-field-content
    }//rx-field

    rx-inline-error {
      font-style: italic;
    }//rx-inline-error in forms

    // replaces .form-actions
    // [rx-form] > rx-form-section > div
    & > div {
      margin-top: (@rxForm-gutter / 2);

      .button {
        margin: 2px;

        &:first-of-type {
          margin-left: 0;
        }

        &:last-of-type {
          margin-right: 0;
        }
      }
    }

    &[stacked] {
      flex-flow: column nowrap;

      & > div,
      rx-field {
        flex: 1 0; // grows vertically, does not shrink
        max-width: @rxForm-field-max-width;
        margin-bottom: (@rxForm-gutter * 1.25);
      }
    }

    &[controlled-width] {
      & > div,
      rx-field {
        max-width: @rxForm-field-max-width;
      }
    }
  }//rx-form-section
}//[rx-form]
