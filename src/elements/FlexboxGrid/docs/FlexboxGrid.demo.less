.FlexboxGrid-demo {
  .rx-example {
    .flex-row,
    .grid-row {
      border-top: 1px dashed var(--rx-blue-700);
    }

    .grid-col {
      position: relative;
      background-color: rgba(0, 0, 0, 0.12);

      p {
        margin: 4px 0;
      }

      &.demo {
        height: 1.5em;
        font-weight: bold;
      }
    }

    .flex-col {
      background-color: rgba(0, 0, 0, 0.12);
      border-left: 1px dotted var(--rx-gray-800);
    }

    // Automatically Set Column Content based on breakpoint (lg-2, md-8, etc.)
    .demoColumns (@prefix, @n) when (@n > 0) {
      .demo.span-@{prefix}-@{n}::before {
        content: '@{prefix}-@{n}';
      }
      .demoColumns(@prefix, @n - 1);
    }//.demoColumns()

    @media (min-width: @grid-break-wrist) {
      #querySize::before {
        content: 'Size: XS';
        display: block;
        font-weight: bold;
        font-variant: small-caps;
      }
      .demoColumns(xs, @grid-column-count);
    }

    @media (min-width: @grid-break-palm) {
      #querySize::before {
        content: 'Size: SM';
      }
      .demoColumns(sm, @grid-column-count);
    }

    @media (min-width: @grid-break-lap) {
      #querySize::before {
        content: 'Size: MD';
      }
      .demoColumns(md, @grid-column-count);
    }

    @media (min-width: @grid-break-desk) {
      #querySize::before {
        content: 'Size: LG';
      }
      .demoColumns(lg, @grid-column-count);
    }

    @media (min-width: @grid-break-wall) {
      #querySize::before {
        content: 'Size: XL';
      }
      .demoColumns(xl, @grid-column-count);
    }
  }//.rx-example
}//.FlexboxGrid-demo
